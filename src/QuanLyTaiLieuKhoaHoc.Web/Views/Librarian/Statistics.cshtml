@model QuanLyTaiLieuKhoaHoc.Web.Models.ViewModels.DashboardViewModel

@{
    ViewData["Title"] = "Thống kê tổng quan";
    var monthlyStats = ViewBag.MonthlyStats as Dictionary<string, int>;
    var userRoleStats = ViewBag.UserRoleStats as Dictionary<string, int>;
}

<div class="content-header">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="mb-0" style="var(--primary-color);">
            <i class="fas fa-chart-line me-2 text-primary"></i>
            Thống kê tổng quan
        </h2>
        <div class="d-flex gap-2">
            <button class="btn btn-outline-primary btn-sm" onclick="window.print()">
                <i class="fas fa-print me-1"></i>In báo cáo
            </button>
            <button class="btn btn-outline-success btn-sm" onclick="exportToExcel()">
                <i class="fas fa-file-excel me-1"></i>Xuất Excel
            </button>
        </div>
    </div>
</div>

<!-- Thống kê tổng quan -->
<div class="row mb-4">
    <div class="col-md-3">
        <div class="card bg-gradient-primary text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h4 class="fw-bold mb-0" style="color: white">@Model.TongSoTaiLieu</h4>
                        <small>Tổng số tài liệu</small>
                    </div>
                    <i class="fas fa-file-alt fa-2x opacity-75"></i>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-gradient-success text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h4 class="fw-bold mb-0" style="color: white">@Model.TongSoNguoiDung</h4>
                        <small>Tổng số người dùng</small>
                    </div>
                    <i class="fas fa-users fa-2x opacity-75"></i>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-gradient-info text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h4 class="fw-bold mb-0" style="color: white">@Model.TongSoLuotMuon</h4>
                        <small>Tổng lượt mượn</small>
                    </div>
                    <i class="fas fa-book-reader fa-2x opacity-75"></i>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-gradient-warning text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h4 class="fw-bold mb-0" style="color: white">@Model.TaiLieuMoiTrongThang</h4>
                        <small>Tài liệu mới tháng này</small>
                    </div>
                    <i class="fas fa-plus-circle fa-2x opacity-75"></i>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <!-- Biểu đồ thống kê theo tháng -->
    <div class="col-md-8">
        <div class="card">
            <div class="card-header bg-light">
                <h5 class="mb-0" style="color: white;">
                    <i class="fas fa-chart-line me-2"></i>
                    Thống kê tài liệu theo tháng (12 tháng gần nhất)
                </h5>
            </div>
            <div class="card-body chart-container" style="height:400px;">
                <canvas id="monthlyChart"></canvas>
            </div>
        </div>
    </div>
    
    <!-- Thống kê người dùng theo vai trò -->
    <div class="col-md-4">
        <div class="card">
            <div class="card-header bg-light">
                <h5 class="mb-0" style="color: white;">
                    <i class="fas fa-users me-2"></i>
                    Người dùng theo vai trò
                </h5>
            </div>
            <div class="card-body chart-container" style="height:400px;">
                <canvas id="userRoleChart"></canvas>
                <div class="mt-3">
                    @if (userRoleStats != null)
                    {
                        @foreach (var role in userRoleStats)
                        {
                            <div class="d-flex justify-content-between align-items-center mb-2">
                                <span class="small">
                                    @switch (role.Key)
                                    {
                                        case "ThuThu":
                                            <i class="fas fa-user-shield text-primary me-1"></i>
                                            <text>Thủ thư</text>
                                            break;
                                        case "GiangVien":
                                            <i class="fas fa-chalkboard-teacher text-success me-1"></i>
                                            <text>Giảng viên</text>
                                            break;
                                        case "SinhVien":
                                            <i class="fas fa-user-graduate text-info me-1"></i>
                                            <text>Sinh viên</text>
                                            break;
                                        default:
                                            <i class="fas fa-user text-secondary me-1"></i>
                                            @role.Key
                                            break;
                                    }
                                </span>
                                <span class="badge bg-secondary">@role.Value</span>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row mt-4">
    <!-- Thống kê theo chuyên ngành -->
    <div class="col-md-6">
        <div class="card">
            <div class="card-header bg-light">
                <h5 class="mb-0" style="color: white;">
                    <i class="fas fa-layer-group me-2"></i>
                    Tài liệu theo chuyên ngành
                </h5>
            </div>
            <div class="card-body chart-container" style="height:400px;">
                @if (Model.ThongKeTheoChuyenNganh?.Any() == true)
                {
                    <canvas id="categoryChart"></canvas>
                    <div class="mt-3">
                        @foreach (var category in Model.ThongKeTheoChuyenNganh.OrderByDescending(x => x.Value).Take(10))
                        {
                            <div class="d-flex justify-content-between align-items-center mb-2">
                                <span class="small">@category.Key</span>
                                <span class="badge bg-secondary">@category.Value</span>
                            </div>
                            <div class="progress mb-2" style="height: 5px;">
                                <div class="progress-bar bg-primary" style="width: @(Model.ThongKeTheoChuyenNganh.Values.Max() > 0 ? (category.Value * 100.0 / Model.ThongKeTheoChuyenNganh.Values.Max()) : 0)%"></div>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <div class="text-center py-4">
                        <i class="fas fa-chart-bar fa-3x text-muted mb-3"></i>
                        <p class="text-muted">Chưa có dữ liệu thống kê theo chuyên ngành.</p>
                    </div>
                }
            </div>
        </div>
    </div>
    
    <!-- Thống kê theo loại tài liệu -->
    <div class="col-md-6">
        <div class="card">
            <div class="card-header bg-light">
                <h5 class="mb-0" style="color: white;">
                    <i class="fas fa-tags me-2"></i>
                    Tài liệu theo loại
                </h5>
            </div>
            <div class="card-body chart-container" style="height:400px;">
                @if (Model.ThongKeTheoLoaiTaiLieu?.Any() == true)
                {
                    <canvas id="documentTypeChart"></canvas>
                    <div class="mt-3">
                        @foreach (var docType in Model.ThongKeTheoLoaiTaiLieu.OrderByDescending(x => x.Value).Take(10))
                        {
                            <div class="d-flex justify-content-between align-items-center mb-2">
                                <span class="small">@docType.Key</span>
                                <span class="badge bg-info text-dark">@docType.Value</span>
                            </div>
                            <div class="progress mb-2" style="height: 5px;">
                                <div class="progress-bar bg-info" style="width: @(Model.ThongKeTheoLoaiTaiLieu.Values.Max() > 0 ? (docType.Value * 100.0 / Model.ThongKeTheoLoaiTaiLieu.Values.Max()) : 0)%"></div>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <div class="text-center py-4">
                        <i class="fas fa-chart-pie fa-3x text-muted mb-3"></i>
                        <p class="text-muted">Chưa có dữ liệu thống kê theo loại tài liệu.</p>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    
    <script>
        // Màu sắc cho biểu đồ
        const colors = {
            primary: '#0d6efd',
            success: '#198754',
            info: '#0dcaf0',
            warning: '#ffc107',
            danger: '#dc3545',
            secondary: '#6c757d'
        };
        
        // Biểu đồ thống kê theo tháng
        @if (monthlyStats != null)
        {
            <text>
            const monthlyCtx = document.getElementById('monthlyChart').getContext('2d');
            new Chart(monthlyCtx, {
                type: 'line',
                data: {
                    labels: @Html.Raw(Json.Serialize(monthlyStats.Keys)),
                    datasets: [{
                        label: 'Số lượt mượn',
                        data: @Html.Raw(Json.Serialize(monthlyStats.Values)),
                        borderColor: colors.primary,
                        backgroundColor: colors.primary + '20',
                        tension: 0.4,
                        fill: true
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: false
                        }
                    },
                    scales: {
                        x: {
                            ticks: {
                                autoSkip: true,
                                maxRotation: 30,
                                minRotation: 0
                            }
                        },
                        y: {
                            beginAtZero: true,
                            ticks: {
                                stepSize: 1
                            }
                        }
                    }
                }
            });
            </text>
        }
        
        // Biểu đồ người dùng theo vai trò
        @if (userRoleStats != null)
        {
            <text>
            const userRoleCtx = document.getElementById('userRoleChart').getContext('2d');
            new Chart(userRoleCtx, {
                type: 'doughnut',
                data: {
                    labels: @Html.Raw(Json.Serialize(userRoleStats.Keys.Select(k => k == "ThuThu" ? "Thủ thư" : k == "GiangVien" ? "Giảng viên" : k == "SinhVien" ? "Sinh viên" : k))),
                    datasets: [{
                        data: @Html.Raw(Json.Serialize(userRoleStats.Values)),
                        backgroundColor: [colors.primary, colors.success, colors.info, colors.warning, colors.danger]
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'bottom'
                        }
                    }
                }
            });
            </text>
        }
        
        // Biểu đồ theo chuyên ngành
        @if (Model.ThongKeTheoChuyenNganh?.Any() == true)
        {
            <text>
            const categoryCtx = document.getElementById('categoryChart').getContext('2d');
            new Chart(categoryCtx, {
                type: 'bar',
                data: {
                    labels: @Html.Raw(Json.Serialize(Model.ThongKeTheoChuyenNganh.Keys.Take(10))),
                    datasets: [{
                        label: 'Số tài liệu',
                        data: @Html.Raw(Json.Serialize(Model.ThongKeTheoChuyenNganh.Values.Take(10))),
                        backgroundColor: colors.primary + '80',
                        borderColor: colors.primary,
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: false
                        }
                    },
                    scales: {
                        x: {
                            ticks: {
                                autoSkip: true,
                                maxRotation: 30,
                                minRotation: 0
                            }
                        },
                        y: {
                            beginAtZero: true,
                            ticks: {
                                stepSize: 1
                            }
                        }
                    }
                }
            });
            </text>
        }
        
        // Biểu đồ theo loại tài liệu
        @if (Model.ThongKeTheoLoaiTaiLieu?.Any() == true)
        {
            <text>
            const docTypeCtx = document.getElementById('documentTypeChart').getContext('2d');
            new Chart(docTypeCtx, {
                type: 'pie',
                data: {
                    labels: @Html.Raw(Json.Serialize(Model.ThongKeTheoLoaiTaiLieu.Keys.Take(10))),
                    datasets: [{
                        data: @Html.Raw(Json.Serialize(Model.ThongKeTheoLoaiTaiLieu.Values.Take(10))),
                        backgroundColor: [
                            colors.primary,
                            colors.success,
                            colors.info,
                            colors.warning,
                            colors.danger,
                            colors.secondary,
                            '#fd7e14',
                            '#20c997',
                            '#6f42c1',
                            '#e83e8c'
                        ]
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'bottom'
                        }
                    }
                }
            });
            </text>
        }
        
        // Xuất Excel (giả lập)
        function exportToExcel() {
            alert('Tính năng xuất Excel sẽ được phát triển trong phiên bản tiếp theo.');
        }
    </script>
    
    <style>
        .bg-gradient-primary {
            background: linear-gradient(45deg, #0d6efd, #6610f2);
        }
        
        .bg-gradient-success {
            background: linear-gradient(45deg, #198754, #20c997);
        }
        
        .bg-gradient-info {
            background: linear-gradient(45deg, #0dcaf0, #6610f2);
        }
        
        .bg-gradient-warning {
            background: linear-gradient(45deg, #ffc107, #fd7e14);
        }
        
        @@media print {
            .btn, .no-print {
                display: none !important;
            }
        }
    </style>
}
