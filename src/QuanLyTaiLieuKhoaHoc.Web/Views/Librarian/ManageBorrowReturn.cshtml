@model QuanLyTaiLieuKhoaHoc.Web.Models.ViewModels.DashboardViewModel
@using QuanLyTaiLieuKhoaHoc.Web.Models
@{
    ViewData["Title"] = "Quản lý mượn trả";
}

<link rel="stylesheet" href="~/css/borrow-return-management.css" />

<!-- Modern Header -->
<div class="borrow-return-header">
    <div class="header-content">
        <div class="header-left">
            <div class="header-icon">
                <i class="fas fa-exchange-alt"></i>
            </div>
            <div class="header-text">
                <h1>Quản lý mượn trả tài liệu</h1>
                <p>Quản lý yêu cầu mượn, theo dõi tài liệu quá hạn và lịch sử mượn trả</p>
            </div>
        </div>
        <div class="header-actions">
            <div class="search-container">
                <div class="search-box">
                    <i class="fas fa-search search-icon"></i>
                    <input type="text" class="search-input" id="globalSearch" placeholder="Tìm kiếm theo mã số, họ tên, tài liệu...">
                    <button class="search-btn" type="button" title="Bộ lọc tìm kiếm">
                        <i class="fas fa-filter"></i>
                    </button>
                </div>
            </div>
            <button type="button" class="btn-refresh" onclick="loadSoTaiLieuQuaHan()" title="Cập nhật dữ liệu">
                <i class="fas fa-sync-alt"></i>
            </button>
        </div>
    </div>
</div>

<!-- Stats Cards -->
<div class="stats-container">
    <div class="stat-card">
        <div class="stat-header">
            <div class="stat-icon requests">
                <i class="fas fa-clipboard-list"></i>
            </div>
        </div>
        <div class="stat-number">@Model.YeuCauMuonTra.Count()</div>
        <div class="stat-label">Yêu cầu chờ duyệt</div>
    </div>
    <div class="stat-card">
        <div class="stat-header">
            <div class="stat-icon overdue">
                <i class="fas fa-exclamation-triangle"></i>
            </div>
        </div>
        <div class="stat-number" id="overdueCount">0</div>
        <div class="stat-label">Tài liệu quá hạn</div>
    </div>
    <div class="stat-card">
        <div class="stat-header">
            <div class="stat-icon history">
                <i class="fas fa-history"></i>
            </div>
        </div>
        <div class="stat-number">@Model.LichSuMuonTra.Count()</div>
        <div class="stat-label">Lịch sử mượn trả</div>
    </div>
    <div class="stat-card">
        <div class="stat-header">
            <div class="stat-icon active">
                <i class="fas fa-check-circle"></i>
            </div>
        </div>
        <div class="stat-number">@Model.LichSuMuonTra.Count(l => l.TrangThai == TrangThaiPhieu.DaTra)</div>
        <div class="stat-label">Đã trả hôm nay</div>
    </div>
</div>

<!-- Main Content -->
<div class="card shadow-sm">
    <div class="card-header bg-white border-0 py-3">
        <ul class="nav nav-tabs" id="borrowReturnTabs" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" id="requests-tab" data-bs-toggle="tab" data-bs-target="#requests"
                        type="button" role="tab" aria-controls="requests" aria-selected="true">
                    <i class="fas fa-clipboard-list me-2"></i> Yêu cầu mượn
                    @if (Model.YeuCauMuonTra.Count() > 0)
                    {
                        <span class="badge bg-warning ms-2">@Model.YeuCauMuonTra.Count()</span>
                    }
                </button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="overdue-tab" data-bs-toggle="tab" data-bs-target="#overdue" type="button"
                        role="tab" aria-controls="overdue" aria-selected="false">
                    <i class="fas fa-exclamation-triangle me-2"></i> Tài liệu quá hạn
                    <span id="overdueBadge" class="badge bg-danger ms-2" style="display: none;">0</span>
                </button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="history-tab" data-bs-toggle="tab" data-bs-target="#history" type="button"
                        role="tab" aria-controls="history" aria-selected="false">
                    <i class="fas fa-history me-2"></i> Lịch sử mượn trả
                </button>
            </li>
        </ul>
    </div>
    <div class="card-body">
        <div class="tab-content" id="borrowReturnTabsContent">
            <div class="tab-pane fade show active" id="requests" role="tabpanel" aria-labelledby="requests-tab">
                <div class="requests-section">
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <div class="search-info">
                                <span class="text-muted">Tìm kiếm trong: <strong>Yêu cầu mượn</strong></span>
                            </div>
                        </div>
                        <div class="col-md-6 text-md-end">
                            <div class="requests-info">
                                <span class="text-muted">Tổng cộng: <strong id="requestsCount">@Model.YeuCauMuonTra.Count()</strong> yêu cầu chờ duyệt</span>
                            </div>
                        </div>
                    </div>
                    <partial name="~/Views/PhieuMuonTra/DanhSachYeuCauChoDuyet.cshtml" model="Model.YeuCauMuonTra" />
                </div>
            </div>
            <div class="tab-pane fade" id="overdue" role="tabpanel" aria-labelledby="overdue-tab">
                <div id="overdueContent">
                    <div class="text-center py-4">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                        <p class="mt-2 text-muted">Đang tải danh sách tài liệu quá hạn...</p>
                    </div>
                </div>
            </div>
            <div class="tab-pane fade" id="history" role="tabpanel" aria-labelledby="history-tab">
                <div class="history-section">
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <div class="search-info">
                                <span class="text-muted">Tìm kiếm trong: <strong>Lịch sử mượn trả</strong></span>
                            </div>
                        </div>
                        <div class="col-md-6 text-md-end">
                            <div class="history-info">
                                <span class="text-muted">Tổng cộng: <strong id="historyCount">@Model.LichSuMuonTra.Count()</strong> bản ghi</span>
                            </div>
                        </div>
                    </div>
                    <partial name="~/Views/PhieuMuonTra/LichSuMuonTra.cshtml" model="Model.LichSuMuonTra" />
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal lập phiếu mượn -->
<div class="modal fade" id="lapPhieuMuonModal" tabindex="-1" aria-labelledby="lapPhieuMuonModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <!-- Nội dung sẽ được load động bằng AJAX -->
        </div>
    </div>
</div>

<!-- Modal lập phiếu trả -->
<div class="modal fade" id="lapPhieuTraModal" tabindex="-1" aria-labelledby="lapPhieuTraModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <!-- Nội dung sẽ được load động bằng AJAX -->
        </div>
    </div>
</div>

<!-- Modal xem chi tiết phiếu -->
<div class="modal fade" id="xemPhieuModal" tabindex="-1" aria-labelledby="xemPhieuModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <!-- Nội dung sẽ được load động bằng AJAX -->
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Global search functionality
            var $globalSearch = $('#globalSearch');
            var currentTab = 'requests';
            
            // Handle global search input
            $globalSearch.on('input', function () {
                var value = $(this).val().toLowerCase();
                performGlobalSearch(value);
            });
            
            // Handle Enter key
            $globalSearch.on('keydown', function (e) {
                if (e.key === 'Enter') {
                    performGlobalSearch($(this).val().toLowerCase());
                }
            });
            
            // Global search function
            function performGlobalSearch(searchTerm) {
                switch (currentTab) {
                    case 'requests':
                        filterRequests(searchTerm);
                        break;
                    case 'overdue':
                        filterOverdue(searchTerm);
                        break;
                    case 'history':
                        filterHistory(searchTerm);
                        break;
                }
            }
            
            // Filter functions for each tab
            function filterRequests(searchTerm) {
                var visibleCount = 0;
                $('#requests table tbody tr').each(function () {
                    var rowText = $(this).text().toLowerCase();
                    var isVisible = !searchTerm || rowText.indexOf(searchTerm) > -1;
                    $(this).toggle(isVisible);
                    if (isVisible) visibleCount++;
                });
                $('#requestsCount').text(visibleCount);
            }
            
            function filterOverdue(searchTerm) {
                var visibleCount = 0;
                $('#overdueContent table tbody tr').each(function () {
                    var rowText = $(this).text().toLowerCase();
                    var isVisible = !searchTerm || rowText.indexOf(searchTerm) > -1;
                    $(this).toggle(isVisible);
                    if (isVisible) visibleCount++;
                });
                // Update overdue count if available
                if ($('#overdueCount').length) {
                    $('#overdueCount').text(visibleCount);
                }
            }
            
            function filterHistory(searchTerm) {
                var visibleCount = 0;
                $('#history .history-card').each(function () {
                    var cardText = $(this).text().toLowerCase();
                    var isVisible = !searchTerm || cardText.indexOf(searchTerm) > -1;
                    $(this).toggle(isVisible);
                    if (isVisible) visibleCount++;
                });
                $('#historyCount').text(visibleCount);
            }
            
            // Tab change handler
            $('button[data-bs-toggle="tab"]').on('shown.bs.tab', function (e) {
                var target = $(e.target).attr('data-bs-target');
                switch (target) {
                    case '#requests':
                        currentTab = 'requests';
                        break;
                    case '#overdue':
                        currentTab = 'overdue';
                        break;
                    case '#history':
                        currentTab = 'history';
                        break;
                }
                
                // Update search placeholder based on current tab
                var placeholders = {
                    'requests': 'Tìm kiếm trong yêu cầu mượn...',
                    'overdue': 'Tìm kiếm trong tài liệu quá hạn...',
                    'history': 'Tìm kiếm trong lịch sử mượn trả...'
                };
                $globalSearch.attr('placeholder', placeholders[currentTab]);
                
                // Re-apply current search if any
                var currentSearch = $globalSearch.val().toLowerCase();
                if (currentSearch) {
                    performGlobalSearch(currentSearch);
                }
            });

            // Load số lượng tài liệu quá hạn khi trang load
            loadSoTaiLieuQuaHan();

            // Load nội dung tài liệu quá hạn khi click vào tab
            $('#overdue-tab').on('click', function () {
                loadOverdueContent();
            });
        });

        function loadSoTaiLieuQuaHan() {
            $.get('/PhieuMuonTra/GetSoTaiLieuQuaHan', function (data) {
                if (data.soLuong > 0) {
                    $('#overdueBadge').text(data.soLuong).show();
                    $('#overdueCount').text(data.soLuong);
                } else {
                    $('#overdueBadge').hide();
                    $('#overdueCount').text('0');
                }
            });
        }

        function loadOverdueContent() {
            $('#overdueContent').html(`
                <div class="text-center py-4">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <p class="mt-2 text-muted">Đang tải danh sách tài liệu quá hạn...</p>
                </div>
            `);

            $.get('/PhieuMuonTra/DanhSachTaiLieuQuaHan', function (data) {
                // Extract table content from the response
                var parser = new DOMParser();
                var doc = parser.parseFromString(data, 'text/html');
                var tableContent = doc.querySelector('.table-responsive');

                if (tableContent) {
                    $('#overdueContent').html(tableContent.outerHTML);
                    // Re-apply search if any
                    var currentSearch = $('#globalSearch').val().toLowerCase();
                    if (currentSearch) {
                        filterOverdue(currentSearch);
                    }
                } else {
                    $('#overdueContent').html(`
                        <div class="alert alert-success">
                            <i class="fas fa-check-circle"></i>
                            Không có tài liệu nào quá hạn trả!
                        </div>
                    `);
                }
            }).fail(function () {
                $('#overdueContent').html(`
                    <div class="alert alert-danger">
                        <i class="fas fa-exclamation-triangle"></i>
                        Có lỗi xảy ra khi tải danh sách tài liệu quá hạn!
                    </div>
                `);
            });
        }

        // Helper function for overdue filtering (accessible globally)
        function filterOverdue(searchTerm) {
            var visibleCount = 0;
            $('#overdueContent table tbody tr').each(function () {
                var rowText = $(this).text().toLowerCase();
                var isVisible = !searchTerm || rowText.indexOf(searchTerm) > -1;
                $(this).toggle(isVisible);
                if (isVisible) visibleCount++;
            });
        }

        window.openLapPhieuMuonModal = function (maPhieu) {
            $('#lapPhieuMuonModal').remove();
            // Thêm modal mới vào body
            $('body').append('<div class="modal fade" id="lapPhieuMuonModal" tabindex="-1" aria-labelledby="lapPhieuMuonModalLabel" aria-hidden="true"><div class="modal-dialog"><div class="modal-content"></div></div></div>');
            $.get('/PhieuMuonTra/LapPhieuMuon', { maPhieu: maPhieu }, function (html) {
                $('#lapPhieuMuonModal .modal-content').html(html);
                $('#lapPhieuMuonModal').modal({ backdrop: 'static', keyboard: false });
                $('#lapPhieuMuonModal').modal('show');
            });
        };

        // Đảm bảo luôn submit qua AJAX kể cả khi modal được tạo lại động
        $(document).on('submit', '#lapPhieuMuonForm', function (e) {
            e.preventDefault();
            var formData = $(this).serialize();
            $.ajax({
                url: $(this).attr('action'),
                type: 'POST',
                data: formData,
                success: function (response) {
                    if (response.success) {
                        toastr.success(response.message);
                        $('#lapPhieuMuonModal').modal('hide');
                        setTimeout(function () {
                            location.reload();
                        }, 1000);
                    } else {
                        toastr.error(response.message);
                    }
                },
                error: function () {
                    toastr.error('Có lỗi xảy ra khi lập phiếu mượn!');
                }
            });
        });

        // Reset nội dung modal khi đóng để tránh form cũ còn tồn tại
        $('#lapPhieuMuonModal').on('hidden.bs.modal', function () {
            $(this).find('.modal-content').html('');
        });

        // Function để mở modal trả tài liệu
        window.openLapPhieuTraModal = function (maPhieu) {
            $('#lapPhieuTraModal').remove();
            // Thêm modal mới vào body
            $('body').append('<div class="modal fade" id="lapPhieuTraModal" tabindex="-1" aria-labelledby="lapPhieuTraModalLabel" aria-hidden="true"><div class="modal-dialog"><div class="modal-content"></div></div></div>');
            $.get('/PhieuMuonTra/LapPhieuTra', { maPhieu: maPhieu }, function (html) {
                $('#lapPhieuTraModal .modal-content').html(html);
                $('#lapPhieuTraModal').modal({ backdrop: 'static', keyboard: false });
                $('#lapPhieuTraModal').modal('show');
            });
        };

        // Đảm bảo luôn submit qua AJAX cho form trả tài liệu
        $(document).on('submit', '#lapPhieuTraForm', function (e) {
            e.preventDefault();
            var formData = $(this).serialize();
            $.ajax({
                url: $(this).attr('action'),
                type: 'POST',
                data: formData,
                success: function (response) {
                    if (response.success) {
                        toastr.success(response.message);
                        $('#lapPhieuTraModal').modal('hide');
                        setTimeout(function () {
                            location.reload();
                        }, 1000);
                    } else {
                        toastr.error(response.message);
                    }
                },
                error: function () {
                    toastr.error('Có lỗi xảy ra khi trả tài liệu!');
                }
            });
        });

        // Reset nội dung modal trả tài liệu khi đóng
        $('#lapPhieuTraModal').on('hidden.bs.modal', function () {
            $(this).find('.modal-content').html('');
        });

        // Function để mở modal xem chi tiết phiếu
        window.openXemPhieuModal = function (maPhieu) {
            $('#xemPhieuModal').remove();
            // Thêm modal mới vào body
            $('body').append('<div class="modal fade" id="xemPhieuModal" tabindex="-1" aria-labelledby="xemPhieuModalLabel" aria-hidden="true"><div class="modal-dialog"><div class="modal-content"></div></div></div>');
            $.get('/PhieuMuonTra/XemPhieu', { maPhieu: maPhieu }, function (html) {
                $('#xemPhieuModal .modal-content').html(html);
                $('#xemPhieuModal').modal({ backdrop: 'static', keyboard: false });
                $('#xemPhieuModal').modal('show');
            });
        };

        // Reset nội dung modal xem chi tiết khi đóng
        $('#xemPhieuModal').on('hidden.bs.modal', function () {
            $(this).find('.modal-content').html('');
        });
    </script>
}