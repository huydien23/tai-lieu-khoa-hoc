@model IEnumerable<QuanLyTaiLieuKhoaHoc.Web.Models.TaiLieu>
@using QuanLyTaiLieuKhoaHoc.Web.Models

@{
    ViewData["Title"] = "Quản lý Tài liệu";
}

<!-- Modern Header -->
<div class="modern-document-header">
    <div class="header-background">
        <div class="header-content">
            <div class="header-left">
                <div class="header-icon">
                    <i class="fas fa-file-alt"></i>
                </div>
                <div class="header-text">
                    <h1 class="header-title">Quản lý Tài liệu</h1>
                    <p class="header-subtitle">Quản lý và giám sát tài liệu khoa học</p>
                </div>
            </div>
            <div class="header-actions">
                <div class="search-container">
                    <div class="search-box">
                        <i class="fas fa-search search-icon"></i>
                        <input type="text" id="searchInput" class="search-input" placeholder="Tìm kiếm tài liệu...">
                        <button class="search-btn" type="button">
                            <i class="fas fa-filter"></i>
                        </button>
                    </div>
                </div>
                <div class="action-buttons">
                    <button type="button" class="btn-refresh" onclick="fixSoLuongMuonData()" title="Cập nhật dữ liệu">
                        <i class="fas fa-sync-alt"></i>
                    </button>
                    <button type="button" class="btn-add" data-bs-toggle="modal" data-bs-target="#createDocumentModal" title="Thêm tài liệu">
                        <i class="fas fa-plus"></i>
                        <span>Thêm tài liệu</span>
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Filters and Stats -->
<div class="filters-section">
    <div class="filters-container">
        <div class="filter-group">
            <label class="filter-label">Chuyên ngành:</label>
            <select class="filter-select" id="chuyenNganhFilter">
                <option value="">Tất cả</option>
                @foreach (var chuyenNganh in Model.Select(t => t.ChuyenNganh).Distinct().Where(c => c != null))
                {
                    <option value="@chuyenNganh.TenChuyenNganh">@chuyenNganh.TenChuyenNganh</option>
                }
            </select>
        </div>
        <div class="filter-group">
            <label class="filter-label">Loại tài liệu:</label>
            <select class="filter-select" id="loaiTaiLieuFilter">
                <option value="">Tất cả</option>
                @foreach (var loaiTaiLieu in Model.Select(t => t.LoaiTaiLieu).Distinct().Where(l => l != null))
                {
                    <option value="@loaiTaiLieu.TenLoaiTaiLieu">@loaiTaiLieu.TenLoaiTaiLieu</option>
                }
            </select>
        </div>
                       <div class="filter-group">
                   <label class="filter-label">Trạng thái:</label>
                   <select class="filter-select" id="trangThaiFilter">
                       <option value="">Tất cả</option>
                       <option value="DaDuyet">Đã duyệt</option>
                       <option value="TuChoi">Từ chối</option>
                       <option value="An">Ẩn</option>
                   </select>
               </div>
    </div>
    <div class="stats-container">
        <div class="stat-item">
            <div class="stat-icon">
                <i class="fas fa-file-alt"></i>
            </div>
            <div class="stat-content">
                <div class="stat-number">@Model.Count()</div>
                <div class="stat-label">Tổng tài liệu</div>
            </div>
        </div>
                       <div class="stat-item">
                   <div class="stat-icon">
                       <i class="fas fa-check-circle"></i>
                   </div>
                   <div class="stat-content">
                       <div class="stat-number">@Model.Count(t => t.TrangThai == TrangThaiTaiLieu.DaDuyet)</div>
                       <div class="stat-label">Đã duyệt</div>
                   </div>
               </div>
               <div class="stat-item">
                   <div class="stat-icon">
                       <i class="fas fa-eye-slash"></i>
                   </div>
                   <div class="stat-content">
                       <div class="stat-number">@Model.Count(t => t.TrangThai == TrangThaiTaiLieu.An)</div>
                       <div class="stat-label">Đã ẩn</div>
                   </div>
               </div>
        <div class="stat-item">
            <div class="stat-icon">
                <i class="fas fa-book-reader"></i>
            </div>
            <div class="stat-content">
                <div class="stat-number">@Model.Sum(t => t.SoLuongDaMuon)</div>
                <div class="stat-label">Lượt mượn</div>
            </div>
        </div>
    </div>
</div>

<!-- Documents Grid -->
<div class="documents-container">
    @if (!Model.Any())
    {
        <div class="empty-state">
            <div class="empty-icon">
                <i class="fas fa-file-alt"></i>
            </div>
            <h3>Chưa có tài liệu nào</h3>
            <p>Hãy thêm tài liệu đầu tiên để bắt đầu quản lý</p>
            <button type="button" class="btn-add-empty" data-bs-toggle="modal" data-bs-target="#createDocumentModal">
                <i class="fas fa-plus"></i>
                Thêm tài liệu đầu tiên
            </button>
        </div>
    }
    else
    {
        <div class="documents-grid" id="documentsGrid">
            @foreach (var item in Model)
            {
                <div class="document-card" data-chuyen-nganh="@item.ChuyenNganh?.TenChuyenNganh" 
                     data-loai-tai-lieu="@item.LoaiTaiLieu?.TenLoaiTaiLieu" 
                     data-trang-thai="@item.TrangThai.ToString()">
                    <div class="card-header">
                        <div class="document-type-badge">
                            <i class="fas fa-file-alt"></i>
                            @item.LoaiTaiLieu?.TenLoaiTaiLieu
                        </div>
                        <div class="document-status">
                                                               @switch (item.TrangThai)
                                   {
                                       case TrangThaiTaiLieu.DaDuyet:
                                           <span class="status-badge approved">
                                               <i class="fas fa-check-circle"></i>
                                               Đã duyệt
                                           </span>
                                           break;
                                       case TrangThaiTaiLieu.TuChoi:
                                           <span class="status-badge rejected">
                                               <i class="fas fa-times-circle"></i>
                                               Từ chối
                                           </span>
                                           break;
                                       case TrangThaiTaiLieu.An:
                                           <span class="status-badge hidden">
                                               <i class="fas fa-eye-slash"></i>
                                               Đã ẩn
                                           </span>
                                           break;
                                   }
                        </div>
                    </div>
                    
                    <div class="card-body">
                        <h5 class="document-title">@item.TenTaiLieu</h5>
                        <p class="document-description">
                            @(item.MoTa.Length > 100 ? item.MoTa.Substring(0, 100) + "..." : item.MoTa)
                        </p>
                        
                        <div class="document-meta">
                            <div class="meta-item">
                                <i class="fas fa-user-edit"></i>
                                <span>@item.TacGia</span>
                            </div>
                            <div class="meta-item">
                                <i class="fas fa-layer-group"></i>
                                <span>@item.ChuyenNganh?.TenChuyenNganh</span>
                            </div>
                            <div class="meta-item">
                                <i class="fas fa-calendar"></i>
                                <span>@item.NgayTaiLen.ToString("dd/MM/yyyy")</span>
                            </div>
                        </div>
                        
                        <div class="document-stats">
                            <div class="stat-row">
                                <div class="stat-item">
                                    <span class="stat-label">Tổng:</span>
                                    <span class="stat-value">@item.SoLuong</span>
                                </div>
                                <div class="stat-item">
                                    <span class="stat-label">Đã mượn:</span>
                                    <span class="stat-value">@item.SoLuongDaMuon</span>
                                </div>
                                <div class="stat-item">
                                    <span class="stat-label">Còn lại:</span>
                                    @if (item.SoLuongConLai > 0)
                                    {
                                        <span class="stat-value available">@item.SoLuongConLai</span>
                                    }
                                    else
                                    {
                                        <span class="stat-value unavailable">Hết</span>
                                    }
                                </div>
                            </div>
                            <div class="borrow-count">
                                <i class="fas fa-book-reader"></i>
                                <span>@item.SoLuongDaMuon lượt mượn</span>
                            </div>
                        </div>
                    </div>
                    
                    <div class="card-actions">
                        <div class="action-buttons">
                            <button type="button" class="btn-action btn-view" title="Xem chi tiết"
                                onclick="viewDocumentDetails(@item.MaTaiLieu)">
                                <i class="fas fa-eye"></i>
                            </button>
                            
                            <button type="button" class="btn-action btn-borrow" title="Lập phiếu mượn"
                                onclick="openCreatePhieuMuonModal(@item.MaTaiLieu, '@item.TenTaiLieu')">
                                <i class="fas fa-file-signature"></i>
                            </button>
                            
                                                               @if (item.TrangThai == TrangThaiTaiLieu.DaDuyet)
                                   {
                                       <button type="button" class="btn-action btn-hide" title="Ẩn tài liệu"
                                           onclick="hideDocument(@item.MaTaiLieu, '@item.TenTaiLieu')">
                                           <i class="fas fa-eye-slash"></i>
                                       </button>
                                   }
                                   else if (item.TrangThai == TrangThaiTaiLieu.An)
                                   {
                                       <button type="button" class="btn-action btn-show" title="Hiện tài liệu"
                                           onclick="showDocument(@item.MaTaiLieu, '@item.TenTaiLieu')">
                                           <i class="fas fa-eye"></i>
                                       </button>
                                   }
                            
                            <button type="button" class="btn-action btn-delete" title="Xóa tài liệu"
                                onclick="deleteDocument(@item.MaTaiLieu, '@item.TenTaiLieu')">
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>
                    </div>
                </div>
            }
        </div>
        
        <!-- Pagination -->
        <div class="pagination-container">
            <div class="pagination-info">
                <span>Hiển thị <span id="currentPageInfo">1-10</span> của <span id="totalItems">@Model.Count()</span> tài liệu</span>
            </div>
            <div class="pagination-controls">
                <button class="btn-pagination" id="prevPage" disabled>
                    <i class="fas fa-chevron-left"></i>
                    Trước
                </button>
                <div class="page-numbers" id="pageNumbers">
                    <!-- Page numbers will be generated by JavaScript -->
                </div>
                <button class="btn-pagination" id="nextPage">
                    Sau
                    <i class="fas fa-chevron-right"></i>
                </button>
            </div>
        </div>
    }
</div>

<!-- Modal lập phiếu mượn (chỉ render 1 lần ngoài vòng lặp) -->
<div class="modal fade" id="createPhieuMuonModal" tabindex="-1" aria-labelledby="createPhieuMuonModalLabel"
    aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createPhieuMuonModalLabel">
                    <i class="fas fa-file-signature text-warning me-2"></i>
                    Lập phiếu mượn tài liệu
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="createPhieuMuonForm">
                <div class="modal-body">
                    <input type="hidden" id="phieuMaTaiLieu" name="maTaiLieu" />
                    <div class="form-check mb-3">
                        <input class="form-check-input" type="checkbox" value="true" id="isMemberCheckbox">
                        <label class="form-check-label" for="isMemberCheckbox">
                            Người mượn là thành viên hệ thống
                        </label>
                    </div>
                    <div class="mb-3 d-none" id="memberSearchGroup">
                        <label for="memberSearch" class="form-label">Tìm thành viên (mã số, tên, email)</label>
                        <input type="text" class="form-control" id="memberSearch" autocomplete="off"
                            placeholder="Nhập mã số, tên hoặc email...">
                        <div class="list-group position-absolute w-100" id="memberSearchResults" style="z-index: 1000;">
                        </div>
                    </div>
                    <div class="row g-2">
                        <div class="col-md-6 mb-3">
                            <label for="phieuTenTaiLieu" class="form-label">Tên tài liệu</label>
                            <input type="text" class="form-control" id="phieuTenTaiLieu" name="tenTaiLieu" readonly />
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="phieuMaNguoiMuon" class="form-label">Mã số người mượn</label>
                            <input type="text" class="form-control" id="phieuMaNguoiMuon" name="maNguoiMuon" required />
                        </div>
                    </div>
                    <div class="row g-2">
                        <div class="col-md-6 mb-3">
                            <label for="phieuHoTenNguoiMuon" class="form-label">Họ tên người mượn</label>
                            <input type="text" class="form-control" id="phieuHoTenNguoiMuon" name="hoTenNguoiMuon"
                                required />
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="phieuEmailNguoiMuon" class="form-label">Email người mượn</label>
                            <input type="email" class="form-control" id="phieuEmailNguoiMuon" name="emailNguoiMuon" />
                        </div>
                    </div>
                    <div class="row g-2">
                        <div class="col-md-6 mb-3">
                            <label for="phieuSDTNguoiMuon" class="form-label">Số điện thoại người mượn</label>
                            <input type="text" class="form-control" id="phieuSDTNguoiMuon" name="sdtNguoiMuon" />
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="phieuLoaiNguoiMuon" class="form-label">Loại người mượn</label>
                            <select class="form-control" id="phieuLoaiNguoiMuon" name="loaiNguoiMuon" required>
                                <option value="">-- Chọn loại người mượn --</option>
                                <option value="Sinh viên">Sinh viên</option>
                                <option value="Giảng viên">Giảng viên</option>
                                <option value="Cán bộ">Cán bộ</option>
                                <option value="Nghiên cứu sinh">Nghiên cứu sinh</option>
                                <option value="Khách">Khách</option>
                                <option value="Khác">Khác</option>
                            </select>
                        </div>
                    </div>
                    <div class="row g-2">
                        <div class="col-md-6 mb-3">
                            <label for="phieuNgayMuon" class="form-label">Ngày mượn</label>
                            <input type="date" class="form-control" id="phieuNgayMuon" name="ngayMuon" />
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="phieuNgayTraDuKien" class="form-label">Ngày trả dự kiến</label>
                            <input type="date" class="form-control" id="phieuNgayTraDuKien" name="ngayTraDuKien" />
                        </div>
                    </div>
                    <div class="row g-2">
                        <div class="col-md-6 mb-3">
                            <label for="phieuSoLuong" class="form-label">Số lượng mượn</label>
                            <input type="number" class="form-control" id="phieuSoLuong" name="soLuong" min="1"
                                value="1" />
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="phieuGhiChu" class="form-label">Ghi chú</label>
                            <textarea class="form-control" id="phieuGhiChu" name="ghiChu" rows="2"></textarea>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                    <button type="submit" class="btn btn-warning">Lập phiếu mượn</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Modal từ chối tài liệu -->
<div class="modal fade" id="rejectModal" tabindex="-1" aria-labelledby="rejectModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="rejectModalLabel">
                    <i class="fas fa-times-circle text-danger me-2"></i>
                    Từ chối tài liệu
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form asp-action="RejectDocument" method="post">
                <div class="modal-body">
                    <input type="hidden" id="rejectDocumentId" name="id" />
                    <p>Bạn có chắc chắn muốn từ chối tài liệu <strong id="rejectDocumentName"></strong>?</p>
                    <div class="mb-3">
                        <label for="lyDo" class="form-label">Lý do từ chối (tùy chọn):</label>
                        <textarea class="form-control" id="lyDo" name="lyDo" rows="3"
                            placeholder="Nhập lý do từ chối tài liệu..."></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                        <i class="fas fa-times me-1"></i>Hủy
                    </button>
                    <button type="submit" class="btn btn-danger">
                        <i class="fas fa-times-circle me-1"></i>Từ chối
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Modal xem chi tiết tài liệu -->
<div class="modal fade" id="documentDetailsModal" tabindex="-1" aria-labelledby="documentDetailsModalLabel"
    aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="documentDetailsModalLabel">
                    <i class="fas fa-file-alt text-primary me-2"></i>
                    Chi tiết tài liệu
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="documentDetailsContent">
                <div class="text-center py-3">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <p class="mt-2 text-muted">Đang tải thông tin...</p>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal thêm tài liệu -->
<div class="modal fade" id="createDocumentModal" tabindex="-1" aria-labelledby="createDocumentModalLabel"
    aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createDocumentModalLabel">
                    <i class="fas fa-plus-circle text-success me-2"></i>
                    Thêm tài liệu mới
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="createDocumentContent">
                <div class="text-center py-3">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <p class="mt-2 text-muted">Đang tải form...</p>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Tìm kiếm tài liệu
        // Hàm mở modal lập phiếu mượn (toàn cục)
        function openCreatePhieuMuonModal(maTaiLieu, tenTaiLieu) {
            $('#phieuMaTaiLieu').val(maTaiLieu);
            $('#phieuTenTaiLieu').val(tenTaiLieu);
            $('#phieuMaNguoiMuon').val("").prop('readonly', false);
            $('#phieuHoTenNguoiMuon').val("").prop('readonly', false);
            $('#phieuEmailNguoiMuon').val("").prop('readonly', false);
            $('#phieuSDTNguoiMuon').val("").prop('readonly', false);
            $('#phieuLoaiNguoiMuon').val("");
            $('#phieuNgayMuon').val(new Date().toISOString().slice(0, 10));
            $('#phieuNgayTraDuKien').val("");
            $('#phieuSoLuong').val(1);
            $('#phieuGhiChu').val("");
            $('#isMemberCheckbox').prop('checked', false);
            $('#memberSearchGroup').addClass('d-none');
            $('#memberSearch').val("");
            $('#memberSearchResults').empty();
            
            // Load thông tin số lượng tài liệu
            loadTaiLieuInfo(maTaiLieu);
            
            $('#createPhieuMuonModal').modal('show');
        }
        window.openCreatePhieuMuonModal = openCreatePhieuMuonModal;

        // Xử lý submit lập phiếu mượn
        $('#createPhieuMuonForm').on('submit', function (e) {
            e.preventDefault();
            var data = {
                maTaiLieu: $('#phieuMaTaiLieu').val(),
                maSoNguoiMuon: $('#phieuMaNguoiMuon').val(),
                hoTenNguoiMuon: $('#phieuHoTenNguoiMuon').val(),
                emailNguoiMuon: $('#phieuEmailNguoiMuon').val(),
                soDienThoaiNguoiMuon: $('#phieuSDTNguoiMuon').val(),
                loaiNguoiMuon: $('#phieuLoaiNguoiMuon').val(),
                ngayMuon: $('#phieuNgayMuon').val(),
                ngayTraDuKien: $('#phieuNgayTraDuKien').val(),
                soLuongMuon: $('#phieuSoLuong').val(),
                ghiChu: $('#phieuGhiChu').val()
            };
            $.ajax({
                url: '/Librarian/LapPhieuMuonTrucTiep',
                type: 'POST',
                data: data,
                success: function (response) {
                    if (response.success) {
                        toastr.success(response.message);
                        $('#createPhieuMuonModal').modal('hide');
                        // Refresh page sau 1 giây
                        setTimeout(function () {
                            location.reload();
                        }, 1000);
                    } else {
                        toastr.error(response.message);
                    }
                },
                error: function (xhr, status, error) {
                    toastr.error('Có lỗi xảy ra khi lập phiếu: ' + error);
                }
            });
        });

        // Xử lý checkbox thành viên hệ thống
        $('#isMemberCheckbox').on('change', function () {
            if ($(this).is(':checked')) {
                $('#memberSearchGroup').removeClass('d-none');
                $('#phieuMaNguoiMuon, #phieuHoTenNguoiMuon, #phieuEmailNguoiMuon, #phieuSDTNguoiMuon').prop('readonly', true);
                $('#phieuLoaiNguoiMuon').prop('disabled', true);
            } else {
                $('#memberSearchGroup').addClass('d-none');
                $('#phieuMaNguoiMuon, #phieuHoTenNguoiMuon, #phieuEmailNguoiMuon, #phieuSDTNguoiMuon').prop('readonly', false);
                $('#phieuLoaiNguoiMuon').prop('disabled', false);
                $('#memberSearch').val("");
                $('#memberSearchResults').empty();
            }
        });

        // Autocomplete tìm thành viên hệ thống
        $('#memberSearch').on('input', function () {
            var query = $(this).val();
            if (query.length < 2) {
                $('#memberSearchResults').empty();
                return;
            }
            $.get('/Librarian/SearchMember', { q: query }, function (data) {
                var results = data || [];
                var html = '';
                results.forEach(function (m) {
                    var sdt = m.sdt || 'Chưa có';
                    html += `<button type="button" class="list-group-item list-group-item-action" data-maso="${m.maSo}" data-hoten="${m.hoTen}" data-email="${m.email}" data-sdt="${sdt}" data-loai="${m.loai}">${m.maSo} - ${m.hoTen} (${m.loai}) - ${sdt}</button>`;
                });
                $('#memberSearchResults').html(html);
            });
        });

        // Chọn thành viên từ autocomplete
        $('#memberSearchResults').on('click', 'button', function () {
            var sdt = $(this).data('sdt');
            $('#phieuMaNguoiMuon').val($(this).data('maso'));
            $('#phieuHoTenNguoiMuon').val($(this).data('hoten'));
            $('#phieuEmailNguoiMuon').val($(this).data('email'));
            $('#phieuSDTNguoiMuon').val(sdt === 'Chưa có' ? '' : sdt);
            $('#phieuLoaiNguoiMuon').val($(this).data('loai'));
            $('#memberSearchResults').empty();
        });

        // Tìm kiếm tài liệu
        document.getElementById('searchInput').addEventListener('input', function () {
            const searchTerm = this.value.toLowerCase();
            const table = document.getElementById('documentsTable');
            const rows = table.getElementsByTagName('tbody')[0].getElementsByTagName('tr');

            for (let i = 0; i < rows.length; i++) {
                const row = rows[i];
                const text = row.textContent.toLowerCase();
                if (text.includes(searchTerm)) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            }
        });

        // Xử lý modal từ chối
        const rejectModal = document.getElementById('rejectModal');
        rejectModal.addEventListener('show.bs.modal', function (event) {
            const button = event.relatedTarget;
            const documentId = button.getAttribute('data-document-id');
            const documentName = button.getAttribute('data-document-name');

            document.getElementById('rejectDocumentId').value = documentId;
            document.getElementById('rejectDocumentName').textContent = documentName;
        });

        // Xem chi tiết tài liệu
        function viewDocumentDetails(documentId) {
            $('#documentDetailsModal').modal('show');
            $.get('@Url.Action("GetDocumentDetails")', { id: documentId }, function (data) {
                $('#documentDetailsContent').html(data);
            }).fail(function () {
                $('#documentDetailsContent').html('<div class="alert alert-danger">Có lỗi xảy ra khi tải thông tin!</div>');
            });
        }

        // Load thông tin số lượng tài liệu
        function loadTaiLieuInfo(maTaiLieu) {
            fetch(`/Librarian/GetTaiLieuSoLuong?maTaiLieu=${maTaiLieu}`)
                .then(res => res.json())
                .then(data => {
                    if (data.success) {
                        document.getElementById('soLuongTotal').textContent = `Tổng: ${data.soLuong}`;
                        document.getElementById('soLuongDaMuon').textContent = `Đã mượn: ${data.soLuongDaMuon}`;
                        document.getElementById('soLuongConLai').textContent = `Còn lại: ${data.soLuongConLai}`;
                        
                        // Disable nút lập phiếu nếu hết sách
                        const submitBtn = document.querySelector('#lapPhieuMuonForm button[type="submit"]');
                        if (data.soLuongConLai <= 0) {
                            submitBtn.disabled = true;
                            submitBtn.textContent = 'Hết sách';
                            submitBtn.className = 'btn btn-danger';
                        } else {
                            submitBtn.disabled = false;
                            submitBtn.textContent = 'Xác nhận lập phiếu mượn';
                            submitBtn.className = 'btn btn-success';
                        }
                    }
                })
                .catch(error => {
                    console.error('Lỗi khi tải thông tin số lượng:', error);
                });
        }

        // Load create document modal
        $('#createDocumentModal').on('show.bs.modal', function (e) {
            $.get('@Url.Action("CreateDocument")', function (data) {
                $('#createDocumentContent').html(data);
            }).fail(function () {
                $('#createDocumentContent').html('<div class="alert alert-danger">Có lỗi xảy ra khi tải form!</div>');
            });
        });

        // Reset modals when hidden
        $('#createDocumentModal').on('hidden.bs.modal', function (e) {
            $('#createDocumentContent').html(`
                                                           <div  class="text-center py-3">
                                                               <div  class="spinner-border text-primary" role="status">
                                                                   <spa n class="visually-hidden">Loading...</spa>
                                                              </di  v>
                                                              <p c  lass="mt-2 text-muted">Đang tải form...</p>
                                                         </di   v>
                                                        `);
        });

        $('#documentDetailsModal').on('hidden.bs.modal', function (e) {
            $('#documentDetailsContent').html(`
                                                        <div     class="text-center py-3">
                                                               <div  class="spinner-border text-primary" role="status">
                                                                   <spa n class="visually-hidden">Loading...</spa>
                                                              </di  v>
                                                              <p c  lass="mt-2 text-muted">Đang tải thông tin...</p>
                                                         </di   v>
                                                        `);
        });

        // Delete document function
        function deleteDocument(id, name) {
            if (confirm(`Bạn có chắc chắn muốn xóa tài liệu "${name}"?\n\nLưu ý: Thao tác này không thể hoàn tác!`)) {
                $.ajax({
                    url: '@Url.Action("DeleteDocument")',
                    type: 'POST',
                    data: { id: id },
                    success: function (response) {
                        if (response.success) {
                            toastr.success(response.message);
                            // Refresh page after 1 second
                            setTimeout(function () {
                                location.reload();
                            }, 1000);
                        } else {
                            toastr.error(response.message);
                        }
                    },
                    error: function (xhr, status, error) {
                        toastr.error('Có lỗi xảy ra khi xóa tài liệu: ' + error);
                    }
                });
            }
        }

        // Hide document function
        function hideDocument(id, name) {
            if (confirm(`Bạn có chắc chắn muốn ẩn tài liệu "${name}"?`)) {
                $.ajax({
                    url: '@Url.Action("HideDocument")',
                    type: 'POST',
                    data: { id: id },
                    success: function (response) {
                        if (response.success) {
                            toastr.success(response.message);
                            setTimeout(function () {
                                location.reload();
                            }, 1000);
                        } else {
                            toastr.error(response.message);
                        }
                    },
                    error: function (xhr, status, error) {
                        toastr.error('Có lỗi xảy ra khi ẩn tài liệu: ' + error);
                    }
                });
            }
        }

        // Show document function
        function showDocument(id, name) {
            if (confirm(`Bạn có chắc chắn muốn hiện tài liệu "${name}"?`)) {
                $.ajax({
                    url: '@Url.Action("ShowDocument")',
                    type: 'POST',
                    data: { id: id },
                    success: function (response) {
                        if (response.success) {
                            toastr.success(response.message);
                            setTimeout(function () {
                                location.reload();
                            }, 1000);
                        } else {
                            toastr.error(response.message);
                        }
                    },
                    error: function (xhr, status, error) {
                        toastr.error('Có lỗi xảy ra khi hiện tài liệu: ' + error);
                    }
                });
            }
        }

        // Cập nhật lại dữ liệu số lượng mượn
        function fixSoLuongMuonData() {
            if (confirm('Bạn có chắc chắn muốn cập nhật lại dữ liệu số lượng mượn? Hành động này sẽ đồng bộ lại tất cả phiếu mượn cũ và tính lại số lượng tài liệu.')) {
                fetch('/Librarian/FixSoLuongMuonData', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        toastr.success(data.message);
                        setTimeout(() => location.reload(), 1500);
                    } else {
                        toastr.error(data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    toastr.error('Có lỗi xảy ra khi cập nhật dữ liệu');
                });
            }
        }

        // Pagination and Filtering System
        let currentPage = 1;
        const itemsPerPage = 12;
        let filteredDocuments = [];

        // Initialize pagination
        document.addEventListener('DOMContentLoaded', function() {
            initializePagination();
            setupFilters();
            setupSearch();
        });

        function initializePagination() {
            const documents = Array.from(document.querySelectorAll('.document-card'));
            filteredDocuments = documents;
            updatePagination();
        }

        function setupFilters() {
            const chuyenNganhFilter = document.getElementById('chuyenNganhFilter');
            const loaiTaiLieuFilter = document.getElementById('loaiTaiLieuFilter');
            const trangThaiFilter = document.getElementById('trangThaiFilter');

            [chuyenNganhFilter, loaiTaiLieuFilter, trangThaiFilter].forEach(filter => {
                filter.addEventListener('change', applyFilters);
            });
        }

        function setupSearch() {
            const searchInput = document.getElementById('searchInput');
            let searchTimeout;

            searchInput.addEventListener('input', function() {
                clearTimeout(searchTimeout);
                searchTimeout = setTimeout(() => {
                    applyFilters();
                }, 300);
            });
        }

        function applyFilters() {
            const searchTerm = document.getElementById('searchInput').value.toLowerCase();
            const chuyenNganh = document.getElementById('chuyenNganhFilter').value;
            const loaiTaiLieu = document.getElementById('loaiTaiLieuFilter').value;
            const trangThai = document.getElementById('trangThaiFilter').value;

            const allDocuments = Array.from(document.querySelectorAll('.document-card'));
            
            filteredDocuments = allDocuments.filter(card => {
                const title = card.querySelector('.document-title').textContent.toLowerCase();
                const description = card.querySelector('.document-description').textContent.toLowerCase();
                const author = card.querySelector('.meta-item span').textContent.toLowerCase();
                
                const cardChuyenNganh = card.dataset.chuyenNganh || '';
                const cardLoaiTaiLieu = card.dataset.loaiTaiLieu || '';
                const cardTrangThai = card.dataset.trangThai || '';

                // Search filter
                const matchesSearch = !searchTerm || 
                    title.includes(searchTerm) || 
                    description.includes(searchTerm) || 
                    author.includes(searchTerm);

                // Category filters
                const matchesChuyenNganh = !chuyenNganh || cardChuyenNganh === chuyenNganh;
                const matchesLoaiTaiLieu = !loaiTaiLieu || cardLoaiTaiLieu === loaiTaiLieu;
                const matchesTrangThai = !trangThai || cardTrangThai === trangThai;

                return matchesSearch && matchesChuyenNganh && matchesLoaiTaiLieu && matchesTrangThai;
            });

            currentPage = 1;
            updatePagination();
            updateStats();
        }

        function updatePagination() {
            const totalItems = filteredDocuments.length;
            const totalPages = Math.ceil(totalItems / itemsPerPage);
            
            // Update pagination info
            const startItem = (currentPage - 1) * itemsPerPage + 1;
            const endItem = Math.min(currentPage * itemsPerPage, totalItems);
            
            document.getElementById('currentPageInfo').textContent = `${startItem}-${endItem}`;
            document.getElementById('totalItems').textContent = totalItems;

            // Update pagination controls
            const prevBtn = document.getElementById('prevPage');
            const nextBtn = document.getElementById('nextPage');
            const pageNumbers = document.getElementById('pageNumbers');

            prevBtn.disabled = currentPage === 1;
            nextBtn.disabled = currentPage === totalPages;

            // Generate page numbers
            pageNumbers.innerHTML = '';
            const maxVisiblePages = 5;
            let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));
            let endPage = Math.min(totalPages, startPage + maxVisiblePages - 1);

            if (endPage - startPage + 1 < maxVisiblePages) {
                startPage = Math.max(1, endPage - maxVisiblePages + 1);
            }

            for (let i = startPage; i <= endPage; i++) {
                const pageBtn = document.createElement('button');
                pageBtn.className = `page-number ${i === currentPage ? 'active' : ''}`;
                pageBtn.textContent = i;
                pageBtn.onclick = () => goToPage(i);
                pageNumbers.appendChild(pageBtn);
            }

            // Show/hide documents
            showCurrentPage();
        }

        function showCurrentPage() {
            const allDocuments = document.querySelectorAll('.document-card');
            const startIndex = (currentPage - 1) * itemsPerPage;
            const endIndex = startIndex + itemsPerPage;

            allDocuments.forEach((card, index) => {
                if (filteredDocuments.includes(card)) {
                    const filteredIndex = filteredDocuments.indexOf(card);
                    if (filteredIndex >= startIndex && filteredIndex < endIndex) {
                        card.style.display = 'block';
                    } else {
                        card.style.display = 'none';
                    }
                } else {
                    card.style.display = 'none';
                }
            });
        }

        function goToPage(page) {
            currentPage = page;
            updatePagination();
        }

        function updateStats() {
            const totalDocuments = filteredDocuments.length;
            const approvedDocuments = filteredDocuments.filter(card => 
                card.dataset.trangThai === 'DaDuyet'
            ).length;
            const hiddenDocuments = filteredDocuments.filter(card => 
                card.dataset.trangThai === 'An'
            ).length;

            // Update stats display
            const statItems = document.querySelectorAll('.stats-container .stat-item');
            if (statItems.length >= 4) {
                statItems[0].querySelector('.stat-number').textContent = totalDocuments;
                statItems[1].querySelector('.stat-number').textContent = approvedDocuments;
                statItems[2].querySelector('.stat-number').textContent = hiddenDocuments;
            }
        }

        // Pagination button event listeners
        document.getElementById('prevPage').addEventListener('click', function() {
            if (currentPage > 1) {
                goToPage(currentPage - 1);
            }
        });

        document.getElementById('nextPage').addEventListener('click', function() {
            const totalPages = Math.ceil(filteredDocuments.length / itemsPerPage);
            if (currentPage < totalPages) {
                goToPage(currentPage + 1);
            }
        });

        // Clear filters
        function clearFilters() {
            document.getElementById('searchInput').value = '';
            document.getElementById('chuyenNganhFilter').value = '';
            document.getElementById('loaiTaiLieuFilter').value = '';
            document.getElementById('trangThaiFilter').value = '';
            applyFilters();
        }

        // Add clear filters button functionality
        document.querySelector('.search-btn').addEventListener('click', function() {
            clearFilters();
        });

        // Make deleteDocument function global
        window.deleteDocument = deleteDocument;
    </script>
}
