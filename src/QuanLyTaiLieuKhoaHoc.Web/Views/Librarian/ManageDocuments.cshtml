@model IEnumerable<QuanLyTaiLieuKhoaHoc.Web.Models.TaiLieu>
@using QuanLyTaiLieuKhoaHoc.Web.Models

@{
    ViewData["Title"] = "Quản lý Tài liệu";
}

<!-- Modern Header -->
<div class="modern-document-header">
    <div class="header-background">
        <div class="header-content">
            <div class="header-left">
                <div class="header-icon">
                    <i class="fas fa-file-alt"></i>
                </div>
                <div class="header-text">
                    <h1 class="header-title">Quản lý Tài liệu</h1>
                    <p class="header-subtitle">Quản lý và giám sát tài liệu khoa học</p>
                </div>
            </div>
            <div class="header-actions">
                <div class="search-container">
                    <div class="search-box">
                        <i class="fas fa-search search-icon"></i>
                        <input type="text" id="searchInput" class="search-input" placeholder="Tìm kiếm tài liệu...">
                        <button class="search-btn" type="button">
                            <i class="fas fa-filter"></i>
                        </button>
                    </div>
                </div>
                <div class="action-buttons">
                    <button type="button" class="btn-refresh" onclick="fixSoLuongMuonData()" title="Cập nhật dữ liệu">
                        <i class="fas fa-sync-alt"></i>
                    </button>
                    <button type="button" class="btn-add" data-bs-toggle="modal" data-bs-target="#createDocumentModal" title="Thêm tài liệu">
                        <i class="fas fa-plus"></i>
                        <span>Thêm tài liệu</span>
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Filters and Stats -->
<div class="filters-section">
    <div class="filters-container">
        <div class="filter-group">
            <label class="filter-label">Chuyên ngành:</label>
            <select class="filter-select" id="chuyenNganhFilter">
                <option value="">Tất cả</option>
                @foreach (var chuyenNganh in Model.Select(t => t.ChuyenNganh).Distinct().Where(c => c != null))
                {
                    <option value="@chuyenNganh.TenChuyenNganh">@chuyenNganh.TenChuyenNganh</option>
                }
            </select>
        </div>
        <div class="filter-group">
            <label class="filter-label">Loại tài liệu:</label>
            <select class="filter-select" id="loaiTaiLieuFilter">
                <option value="">Tất cả</option>
                @foreach (var loaiTaiLieu in Model.Select(t => t.LoaiTaiLieu).Distinct().Where(l => l != null))
                {
                    <option value="@loaiTaiLieu.TenLoaiTaiLieu">@loaiTaiLieu.TenLoaiTaiLieu</option>
                }
            </select>
        </div>
                       <div class="filter-group">
                   <label class="filter-label">Trạng thái:</label>
                   <select class="filter-select" id="trangThaiFilter">
                       <option value="">Tất cả</option>
                       <option value="DaDuyet">Đã duyệt</option>
                       <option value="TuChoi">Từ chối</option>
                       <option value="An">Ẩn</option>
                   </select>
               </div>
    </div>
    <div class="stats-container">
        <div class="stat-item">
            <div class="stat-icon">
                <i class="fas fa-file-alt"></i>
            </div>
            <div class="stat-content">
                <div class="stat-number">@Model.Count()</div>
                <div class="stat-label">Tổng tài liệu</div>
            </div>
        </div>
                       <div class="stat-item">
                   <div class="stat-icon">
                       <i class="fas fa-check-circle"></i>
                   </div>
                   <div class="stat-content">
                       <div class="stat-number">@Model.Count(t => t.TrangThai == TrangThaiTaiLieu.DaDuyet)</div>
                       <div class="stat-label">Đã duyệt</div>
                   </div>
               </div>
               <div class="stat-item">
                   <div class="stat-icon">
                       <i class="fas fa-eye-slash"></i>
                   </div>
                   <div class="stat-content">
                       <div class="stat-number">@Model.Count(t => t.TrangThai == TrangThaiTaiLieu.An)</div>
                       <div class="stat-label">Đã ẩn</div>
                   </div>
               </div>
        <div class="stat-item">
            <div class="stat-icon">
                <i class="fas fa-book-reader"></i>
            </div>
            <div class="stat-content">
                <div class="stat-number">@Model.Sum(t => t.SoLuongDaMuon)</div>
                <div class="stat-label">Lượt mượn</div>
            </div>
        </div>
    </div>
</div>

<!-- Documents Grid -->
<div class="documents-container">
    @if (!Model.Any())
    {
        <div class="empty-state">
            <div class="empty-icon">
                <i class="fas fa-file-alt"></i>
            </div>
            <h3>Chưa có tài liệu nào</h3>
            <p>Hãy thêm tài liệu đầu tiên để bắt đầu quản lý</p>
            <button type="button" class="btn-add-empty" data-bs-toggle="modal" data-bs-target="#createDocumentModal">
                <i class="fas fa-plus"></i>
                Thêm tài liệu đầu tiên
            </button>
        </div>
    }
    else
    {
        <div class="documents-grid" id="documentsGrid">
            @foreach (var item in Model)
            {
                <div class="document-card" data-chuyen-nganh="@item.ChuyenNganh?.TenChuyenNganh" 
                     data-loai-tai-lieu="@item.LoaiTaiLieu?.TenLoaiTaiLieu" 
                     data-trang-thai="@item.TrangThai.ToString()">
                    <div class="card-header">
                        <div class="document-type-badge">
                            <i class="fas fa-file-alt"></i>
                            @item.LoaiTaiLieu?.TenLoaiTaiLieu
                        </div>
                        <div class="document-status">
                                                               @switch (item.TrangThai)
                                   {
                                       case TrangThaiTaiLieu.DaDuyet:
                                           <span class="status-badge approved">
                                               <i class="fas fa-check-circle"></i>
                                               Đã duyệt
                                           </span>
                                           break;
                                       case TrangThaiTaiLieu.TuChoi:
                                           <span class="status-badge rejected">
                                               <i class="fas fa-times-circle"></i>
                                               Từ chối
                                           </span>
                                           break;
                                       case TrangThaiTaiLieu.An:
                                           <span class="status-badge hidden">
                                               <i class="fas fa-eye-slash"></i>
                                               Đã ẩn
                                           </span>
                                           break;
                                   }
                        </div>
                    </div>
                    
                    <div class="card-body">
                        <h5 class="document-title">@item.TenTaiLieu</h5>
                        <p class="document-description">
                            @(item.MoTa.Length > 100 ? item.MoTa.Substring(0, 100) + "..." : item.MoTa)
                        </p>
                        
                        <div class="document-meta">
                            <div class="meta-item">
                                <i class="fas fa-user-edit"></i>
                                <span>@item.TacGia</span>
                            </div>
                            <div class="meta-item">
                                <i class="fas fa-layer-group"></i>
                                <span>@item.ChuyenNganh?.TenChuyenNganh</span>
                            </div>
                            <div class="meta-item">
                                <i class="fas fa-calendar"></i>
                                <span>@item.NgayTaiLen.ToString("dd/MM/yyyy")</span>
                            </div>
                        </div>
                        
                        <div class="document-stats">
                            <div class="stat-row">
                                <div class="stat-item">
                                    <span class="stat-label">Tổng:</span>
                                    <span class="stat-value">@item.SoLuong</span>
                                </div>
                                <div class="stat-item">
                                    <span class="stat-label">Đã mượn:</span>
                                    <span class="stat-value">@item.SoLuongDaMuon</span>
                                </div>
                                <div class="stat-item">
                                    <span class="stat-label">Còn lại:</span>
                                    @if (item.SoLuongConLai > 0)
                                    {
                                        <span class="stat-value available">@item.SoLuongConLai</span>
                                    }
                                    else
                                    {
                                        <span class="stat-value unavailable">Hết</span>
                                    }
                                </div>
                            </div>
                            <div class="borrow-count">
                                <i class="fas fa-book-reader"></i>
                                <span>@item.SoLuongDaMuon lượt mượn</span>
                            </div>
                        </div>
                    </div>
                    
                    <div class="card-actions">
                        <div class="action-buttons">
                            <button type="button" class="btn-action btn-view" title="Xem chi tiết"
                                onclick="viewDocumentDetails(@item.MaTaiLieu)">
                                <i class="fas fa-eye"></i>
                            </button>
                            
                            <button type="button" class="btn-action btn-borrow" title="Lập phiếu mượn"
                                onclick="openCreatePhieuMuonModal(@item.MaTaiLieu, '@item.TenTaiLieu')">
                                <i class="fas fa-file-signature"></i>
                            </button>
                            
                                                               @if (item.TrangThai == TrangThaiTaiLieu.DaDuyet)
                                   {
                                       <button type="button" class="btn-action btn-hide" title="Ẩn tài liệu"
                                           onclick="hideDocument(@item.MaTaiLieu, '@item.TenTaiLieu')">
                                           <i class="fas fa-eye-slash"></i>
                                       </button>
                                   }
                                   else if (item.TrangThai == TrangThaiTaiLieu.An)
                                   {
                                       <button type="button" class="btn-action btn-show" title="Hiện tài liệu"
                                           onclick="showDocument(@item.MaTaiLieu, '@item.TenTaiLieu')">
                                           <i class="fas fa-eye"></i>
                                       </button>
                                   }
                            
                            <button type="button" class="btn-action btn-delete" title="Xóa tài liệu"
                                onclick="deleteDocument(@item.MaTaiLieu, '@item.TenTaiLieu')">
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>
                    </div>
                </div>
            }
        </div>
        
        <!-- Pagination -->
        <div class="pagination-container">
            <div class="pagination-info">
                <span>Hiển thị <span id="currentPageInfo">1-10</span> của <span id="totalItems">@Model.Count()</span> tài liệu</span>
            </div>
            <div class="pagination-controls">
                <button class="btn-pagination" id="prevPage" disabled>
                    <i class="fas fa-chevron-left"></i>
                    Trước
                </button>
                <div class="page-numbers" id="pageNumbers">
                    <!-- Page numbers will be generated by JavaScript -->
                </div>
                <button class="btn-pagination" id="nextPage">
                    Sau
                    <i class="fas fa-chevron-right"></i>
                </button>
            </div>
        </div>
    }
</div>

<!-- Modal lập phiếu mượn (chỉ render 1 lần ngoài vòng lặp) -->
<div class="modal fade" id="createPhieuMuonModal" tabindex="-1" aria-labelledby="createPhieuMuonModalLabel"
    aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header modal-borrow-header">
                <h5 class="modal-title" id="createPhieuMuonModalLabel" style="color:white;">
                    <i class="fas fa-file-signature"></i>
                    Lập phiếu mượn tài liệu
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="createPhieuMuonForm">
                <div class="modal-body">
                    <input type="hidden" id="phieuMaTaiLieu" name="maTaiLieu" />
                    
                    <!-- Toggle thành viên hệ thống -->
                    <div class="member-toggle-section mb-4">
                        <div class="form-check custom-checkbox">
                            <input class="form-check-input" type="checkbox" value="true" id="isMemberCheckbox">
                            <label class="form-check-label" for="isMemberCheckbox">
                                <i class="fas fa-users text-primary me-2"></i>
                                Người mượn là thành viên hệ thống
                            </label>
                        </div>
                        <div class="member-search-group d-none" id="memberSearchGroup">
                            <div class="search-card">
                                <div class="search-header">
                                    <i class="fas fa-search text-info"></i>
                                    Tìm thành viên
                                </div>
                                <div class="search-body">
                                    <div class="search-input-wrapper">
                                        <input type="text" class="form-control search-input" id="memberSearch" autocomplete="off"
                                            placeholder="🔍 Gõ để tìm kiếm thành viên (mã số, tên, email)...">
                                        <div class="search-loading d-none">
                                            <i class="fas fa-spinner fa-spin"></i>
                                        </div>
                                    </div>
                                    <div class="search-hint">
                                        <i class="fas fa-lightbulb text-warning"></i>
                                        <small>Gợi ý: Gõ ít nhất 2 ký tự để bắt đầu tìm kiếm</small>
                                    </div>
                                    <div class="search-results" id="memberSearchResults">
                                        <div class="search-empty-state">
                                            <i class="fas fa-search text-muted"></i>
                                            <p>Bắt đầu gõ để tìm kiếm thành viên...</p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Thông tin tài liệu -->
                    <div class="info-card mb-4">
                        <div class="card-header-custom">
                            <i class="fas fa-book text-primary"></i>
                            Thông tin tài liệu
                        </div>
                        <div class="card-body-custom">
                            <div class="form-group-custom">
                                <label for="phieuTenTaiLieu" class="form-label-custom">
                                    <i class="fas fa-book-open text-muted"></i>
                                    Tên tài liệu
                                </label>
                                <input type="text" class="form-control-custom" id="phieuTenTaiLieu" name="tenTaiLieu" readonly />
                            </div>
                        </div>
                    </div>
                    
                    <!-- Thông tin người mượn -->
                    <div class="info-card mb-4">
                        <div class="card-header-custom">
                            <i class="fas fa-user text-success"></i>
                            Thông tin người mượn
                        </div>
                        <div class="card-body-custom">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group-custom">
                                        <label for="phieuMaNguoiMuon" class="form-label-custom">
                                            <i class="fas fa-id-card text-muted"></i>
                                            Mã số người mượn
                                        </label>
                                        <input type="text" class="form-control-custom" id="phieuMaNguoiMuon" name="maNguoiMuon" required />
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group-custom">
                                        <label for="phieuHoTenNguoiMuon" class="form-label-custom">
                                            <i class="fas fa-user-circle text-muted"></i>
                                            Họ tên người mượn
                                        </label>
                                        <input type="text" class="form-control-custom" id="phieuHoTenNguoiMuon" name="hoTenNguoiMuon" required />
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group-custom">
                                        <label for="phieuEmailNguoiMuon" class="form-label-custom">
                                            <i class="fas fa-envelope text-muted"></i>
                                            Email người mượn
                                        </label>
                                        <input type="email" class="form-control-custom" id="phieuEmailNguoiMuon" name="emailNguoiMuon" />
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group-custom">
                                        <label for="phieuSDTNguoiMuon" class="form-label-custom">
                                            <i class="fas fa-phone text-muted"></i>
                                            Số điện thoại người mượn
                                        </label>
                                        <input type="text" class="form-control-custom" id="phieuSDTNguoiMuon" name="sdtNguoiMuon" />
                                    </div>
                                </div>
                            </div>
                            <div class="form-group-custom">
                                <label for="phieuLoaiNguoiMuon" class="form-label-custom">
                                    <i class="fas fa-tags text-muted"></i>
                                    Loại người mượn
                                </label>
                                <select class="form-control-custom" id="phieuLoaiNguoiMuon" name="loaiNguoiMuon" required>
                                    <option value="">-- Chọn loại người mượn --</option>
                                    <option value="Sinh viên">🎓 Sinh viên</option>
                                    <option value="Giảng viên">👨‍🏫 Giảng viên</option>
                                    <option value="Cán bộ">👔 Cán bộ</option>
                                    <option value="Nghiên cứu sinh">🔬 Nghiên cứu sinh</option>
                                    <option value="Khách">👤 Khách</option>
                                    <option value="Khác">📋 Khác</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Thông tin mượn -->
                    <div class="info-card mb-4">
                        <div class="card-header-custom">
                            <i class="fas fa-calendar-alt text-warning"></i>
                            Thông tin mượn
                        </div>
                        <div class="card-body-custom">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group-custom">
                                        <label for="phieuNgayMuon" class="form-label-custom">
                                            <i class="fas fa-calendar-plus text-muted"></i>
                                            Ngày mượn
                                        </label>
                                        <input type="date" class="form-control-custom" id="phieuNgayMuon" name="ngayMuon" />
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group-custom">
                                        <label for="phieuNgayTraDuKien" class="form-label-custom">
                                            <i class="fas fa-calendar-check text-muted"></i>
                                            Ngày trả dự kiến
                                        </label>
                                        <input type="date" class="form-control-custom" id="phieuNgayTraDuKien" name="ngayTraDuKien" />
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group-custom">
                                        <label for="phieuSoLuong" class="form-label-custom">
                                            <i class="fas fa-layer-group text-muted"></i>
                                            Số lượng mượn
                                        </label>
                                        <input type="number" class="form-control-custom" id="phieuSoLuong" name="soLuong" min="1" value="1" />
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group-custom">
                                        <label for="phieuGhiChu" class="form-label-custom">
                                            <i class="fas fa-sticky-note text-muted"></i>
                                            Ghi chú
                                        </label>
                                        <textarea class="form-control-custom" id="phieuGhiChu" name="ghiChu" rows="2" placeholder="Ghi chú về việc mượn tài liệu..."></textarea>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer modal-footer-custom">
                    <button type="button" class="btn btn-secondary-custom" data-bs-dismiss="modal">
                        <i class="fas fa-times me-2"></i>Hủy
                    </button>
                    <button type="submit" class="btn btn-primary-custom">
                        <i class="fas fa-check me-2"></i>Lập phiếu mượn
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Modal từ chối tài liệu -->
<div class="modal fade" id="rejectModal" tabindex="-1" aria-labelledby="rejectModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="rejectModalLabel">
                    <i class="fas fa-times-circle text-danger me-2"></i>
                    Từ chối tài liệu
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form asp-action="RejectDocument" method="post">
                <div class="modal-body">
                    <input type="hidden" id="rejectDocumentId" name="id" />
                    <p>Bạn có chắc chắn muốn từ chối tài liệu <strong id="rejectDocumentName"></strong>?</p>
                    <div class="mb-3">
                        <label for="lyDo" class="form-label">Lý do từ chối (tùy chọn):</label>
                        <textarea class="form-control" id="lyDo" name="lyDo" rows="3"
                            placeholder="Nhập lý do từ chối tài liệu..."></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                        <i class="fas fa-times me-1"></i>Hủy
                    </button>
                    <button type="submit" class="btn btn-danger">
                        <i class="fas fa-times-circle me-1"></i>Từ chối
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Modal xem chi tiết tài liệu -->
<div class="modal fade" id="documentDetailsModal" tabindex="-1" aria-labelledby="documentDetailsModalLabel"
    aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="documentDetailsModalLabel">
                    <i class="fas fa-file-alt text-primary me-2"></i>
                    Chi tiết tài liệu
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="documentDetailsContent">
                <div class="text-center py-3">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <p class="mt-2 text-muted">Đang tải thông tin...</p>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal thêm tài liệu -->
<div class="modal fade" id="createDocumentModal" tabindex="-1" aria-labelledby="createDocumentModalLabel"
    aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createDocumentModalLabel">
                    <i class="fas fa-plus-circle text-success me-2"></i>
                    Thêm tài liệu mới
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="createDocumentContent">
                <div class="text-center py-3">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <p class="mt-2 text-muted">Đang tải form...</p>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Tìm kiếm tài liệu
        // Hàm mở modal lập phiếu mượn (toàn cục)
        function openCreatePhieuMuonModal(maTaiLieu, tenTaiLieu) {
            $('#phieuMaTaiLieu').val(maTaiLieu);
            $('#phieuTenTaiLieu').val(tenTaiLieu);
            $('#phieuMaNguoiMuon').val("").prop('readonly', false);
            $('#phieuHoTenNguoiMuon').val("").prop('readonly', false);
            $('#phieuEmailNguoiMuon').val("").prop('readonly', false);
            $('#phieuSDTNguoiMuon').val("").prop('readonly', false);
            $('#phieuLoaiNguoiMuon').val("");
            $('#phieuNgayMuon').val(new Date().toISOString().slice(0, 10));
            $('#phieuNgayTraDuKien').val("");
            $('#phieuSoLuong').val(1);
            $('#phieuGhiChu').val("");
            $('#isMemberCheckbox').prop('checked', false);
            $('#memberSearchGroup').addClass('d-none');
            $('#memberSearch').val("");
            $('#memberSearchResults').empty();
            
            // Load thông tin số lượng tài liệu
            loadTaiLieuInfo(maTaiLieu);
            
            $('#createPhieuMuonModal').modal('show');
        }
        window.openCreatePhieuMuonModal = openCreatePhieuMuonModal;

        // Xử lý submit lập phiếu mượn
        $('#createPhieuMuonForm').on('submit', function (e) {
            e.preventDefault();
            var data = {
                maTaiLieu: $('#phieuMaTaiLieu').val(),
                maSoNguoiMuon: $('#phieuMaNguoiMuon').val(),
                hoTenNguoiMuon: $('#phieuHoTenNguoiMuon').val(),
                emailNguoiMuon: $('#phieuEmailNguoiMuon').val(),
                soDienThoaiNguoiMuon: $('#phieuSDTNguoiMuon').val(),
                loaiNguoiMuon: $('#phieuLoaiNguoiMuon').val(),
                ngayMuon: $('#phieuNgayMuon').val(),
                ngayTraDuKien: $('#phieuNgayTraDuKien').val(),
                soLuongMuon: $('#phieuSoLuong').val(),
                ghiChu: $('#phieuGhiChu').val()
            };
            $.ajax({
                url: '/Librarian/LapPhieuMuonTrucTiep',
                type: 'POST',
                data: data,
                success: function (response) {
                    if (response.success) {
                        toastr.success(response.message);
                        $('#createPhieuMuonModal').modal('hide');
                        // Refresh page sau 1 giây
                        setTimeout(function () {
                            location.reload();
                        }, 1000);
                    } else {
                        toastr.error(response.message);
                    }
                },
                error: function (xhr, status, error) {
                    toastr.error('Có lỗi xảy ra khi lập phiếu: ' + error);
                }
            });
        });

        // Xử lý checkbox thành viên hệ thống
        $('#isMemberCheckbox').on('change', function () {
            if ($(this).is(':checked')) {
                $('#memberSearchGroup').removeClass('d-none');
                $('#phieuMaNguoiMuon, #phieuHoTenNguoiMuon, #phieuEmailNguoiMuon, #phieuSDTNguoiMuon').prop('readonly', true);
                $('#phieuLoaiNguoiMuon').prop('disabled', true);
            } else {
                $('#memberSearchGroup').addClass('d-none');
                $('#phieuMaNguoiMuon, #phieuHoTenNguoiMuon, #phieuEmailNguoiMuon, #phieuSDTNguoiMuon').prop('readonly', false);
                $('#phieuLoaiNguoiMuon').prop('disabled', false);
                $('#memberSearch').val("");
                $('#memberSearchResults').empty();
            }
        });

        // Autocomplete tìm thành viên hệ thống
        $('#memberSearch').on('input', function () {
            var query = $(this).val();
            if (query.length < 2) {
                $('#memberSearchResults').empty();
                return;
            }
            $.get('/Librarian/SearchMember', { q: query }, function (data) {
                var results = data || [];
                var html = '';
                results.forEach(function (m) {
                    var sdt = m.sdt || 'Chưa có';
                    html += `<button type="button" class="list-group-item list-group-item-action" data-maso="${m.maSo}" data-hoten="${m.hoTen}" data-email="${m.email}" data-sdt="${sdt}" data-loai="${m.loai}">${m.maSo} - ${m.hoTen} (${m.loai}) - ${sdt}</button>`;
                });
                $('#memberSearchResults').html(html);
            });
        });

        // Chọn thành viên từ autocomplete
        $('#memberSearchResults').on('click', 'button', function () {
            var sdt = $(this).data('sdt');
            $('#phieuMaNguoiMuon').val($(this).data('maso'));
            $('#phieuHoTenNguoiMuon').val($(this).data('hoten'));
            $('#phieuEmailNguoiMuon').val($(this).data('email'));
            $('#phieuSDTNguoiMuon').val(sdt === 'Chưa có' ? '' : sdt);
            $('#phieuLoaiNguoiMuon').val($(this).data('loai'));
            $('#memberSearchResults').empty();
        });

        // Tìm kiếm tài liệu
        document.getElementById('searchInput').addEventListener('input', function () {
            const searchTerm = this.value.toLowerCase();
            const table = document.getElementById('documentsTable');
            const rows = table.getElementsByTagName('tbody')[0].getElementsByTagName('tr');

            for (let i = 0; i < rows.length; i++) {
                const row = rows[i];
                const text = row.textContent.toLowerCase();
                if (text.includes(searchTerm)) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            }
        });

        // Xử lý modal từ chối
        const rejectModal = document.getElementById('rejectModal');
        rejectModal.addEventListener('show.bs.modal', function (event) {
            const button = event.relatedTarget;
            const documentId = button.getAttribute('data-document-id');
            const documentName = button.getAttribute('data-document-name');

            document.getElementById('rejectDocumentId').value = documentId;
            document.getElementById('rejectDocumentName').textContent = documentName;
        });

        // Xem chi tiết tài liệu
        function viewDocumentDetails(documentId) {
            $('#documentDetailsModal').modal('show');
            $.get('@Url.Action("GetDocumentDetails")', { id: documentId }, function (data) {
                $('#documentDetailsContent').html(data);
            }).fail(function () {
                $('#documentDetailsContent').html('<div class="alert alert-danger">Có lỗi xảy ra khi tải thông tin!</div>');
            });
        }

        // Load thông tin số lượng tài liệu
        function loadTaiLieuInfo(maTaiLieu) {
            fetch(`/Librarian/GetTaiLieuSoLuong?maTaiLieu=${maTaiLieu}`)
                .then(res => res.json())
                .then(data => {
                    if (data.success) {
                        document.getElementById('soLuongTotal').textContent = `Tổng: ${data.soLuong}`;
                        document.getElementById('soLuongDaMuon').textContent = `Đã mượn: ${data.soLuongDaMuon}`;
                        document.getElementById('soLuongConLai').textContent = `Còn lại: ${data.soLuongConLai}`;
                        
                        // Disable nút lập phiếu nếu hết sách
                        const submitBtn = document.querySelector('#lapPhieuMuonForm button[type="submit"]');
                        if (data.soLuongConLai <= 0) {
                            submitBtn.disabled = true;
                            submitBtn.textContent = 'Hết sách';
                            submitBtn.className = 'btn btn-danger';
                        } else {
                            submitBtn.disabled = false;
                            submitBtn.textContent = 'Xác nhận lập phiếu mượn';
                            submitBtn.className = 'btn btn-success';
                        }
                    }
                })
                .catch(error => {
                    console.error('Lỗi khi tải thông tin số lượng:', error);
                });
        }

        // Load create document modal
        $('#createDocumentModal').on('show.bs.modal', function (e) {
            $.get('@Url.Action("CreateDocument")', function (data) {
                $('#createDocumentContent').html(data);
            }).fail(function () {
                $('#createDocumentContent').html('<div class="alert alert-danger">Có lỗi xảy ra khi tải form!</div>');
            });
        });

        // Reset modals when hidden
        $('#createDocumentModal').on('hidden.bs.modal', function (e) {
            $('#createDocumentContent').html(`
                                                           <div  class="text-center py-3">
                                                               <div  class="spinner-border text-primary" role="status">
                                                                   <spa n class="visually-hidden">Loading...</spa>
                                                              </di  v>
                                                              <p c  lass="mt-2 text-muted">Đang tải form...</p>
                                                         </di   v>
                                                        `);
        });

        $('#documentDetailsModal').on('hidden.bs.modal', function (e) {
            $('#documentDetailsContent').html(`
                                                        <div     class="text-center py-3">
                                                               <div  class="spinner-border text-primary" role="status">
                                                                   <spa n class="visually-hidden">Loading...</spa>
                                                              </di  v>
                                                              <p c  lass="mt-2 text-muted">Đang tải thông tin...</p>
                                                         </di   v>
                                                        `);
        });

        // Delete document function
        function deleteDocument(id, name) {
            if (confirm(`Bạn có chắc chắn muốn xóa tài liệu "${name}"?\n\nLưu ý: Thao tác này không thể hoàn tác!`)) {
                $.ajax({
                    url: '@Url.Action("DeleteDocument")',
                    type: 'POST',
                    data: { id: id },
                    success: function (response) {
                        if (response.success) {
                            toastr.success(response.message);
                            // Refresh page after 1 second
                            setTimeout(function () {
                                location.reload();
                            }, 1000);
                        } else {
                            toastr.error(response.message);
                        }
                    },
                    error: function (xhr, status, error) {
                        toastr.error('Có lỗi xảy ra khi xóa tài liệu: ' + error);
                    }
                });
            }
        }

        // Hide document function
        function hideDocument(id, name) {
            if (confirm(`Bạn có chắc chắn muốn ẩn tài liệu "${name}"?`)) {
                $.ajax({
                    url: '@Url.Action("HideDocument")',
                    type: 'POST',
                    data: { id: id },
                    success: function (response) {
                        if (response.success) {
                            toastr.success(response.message);
                            setTimeout(function () {
                                location.reload();
                            }, 1000);
                        } else {
                            toastr.error(response.message);
                        }
                    },
                    error: function (xhr, status, error) {
                        toastr.error('Có lỗi xảy ra khi ẩn tài liệu: ' + error);
                    }
                });
            }
        }

        // Show document function
        function showDocument(id, name) {
            if (confirm(`Bạn có chắc chắn muốn hiện tài liệu "${name}"?`)) {
                $.ajax({
                    url: '@Url.Action("ShowDocument")',
                    type: 'POST',
                    data: { id: id },
                    success: function (response) {
                        if (response.success) {
                            toastr.success(response.message);
                            setTimeout(function () {
                                location.reload();
                            }, 1000);
                        } else {
                            toastr.error(response.message);
                        }
                    },
                    error: function (xhr, status, error) {
                        toastr.error('Có lỗi xảy ra khi hiện tài liệu: ' + error);
                    }
                });
            }
        }

        // Cập nhật lại dữ liệu số lượng mượn
        function fixSoLuongMuonData() {
            if (confirm('Bạn có chắc chắn muốn cập nhật lại dữ liệu số lượng mượn? Hành động này sẽ đồng bộ lại tất cả phiếu mượn cũ và tính lại số lượng tài liệu.')) {
                fetch('/Librarian/FixSoLuongMuonData', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        toastr.success(data.message);
                        setTimeout(() => location.reload(), 1500);
                    } else {
                        toastr.error(data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    toastr.error('Có lỗi xảy ra khi cập nhật dữ liệu');
                });
            }
        }

        // Pagination and Filtering System
        let currentPage = 1;
        const itemsPerPage = 12;
        let filteredDocuments = [];

        // Initialize pagination
        document.addEventListener('DOMContentLoaded', function() {
            initializePagination();
            setupFilters();
            setupSearch();
        });

        function initializePagination() {
            const documents = Array.from(document.querySelectorAll('.document-card'));
            filteredDocuments = documents;
            updatePagination();
        }

        function setupFilters() {
            const chuyenNganhFilter = document.getElementById('chuyenNganhFilter');
            const loaiTaiLieuFilter = document.getElementById('loaiTaiLieuFilter');
            const trangThaiFilter = document.getElementById('trangThaiFilter');

            [chuyenNganhFilter, loaiTaiLieuFilter, trangThaiFilter].forEach(filter => {
                filter.addEventListener('change', applyFilters);
            });
        }

        function setupSearch() {
            const searchInput = document.getElementById('searchInput');
            let searchTimeout;

            searchInput.addEventListener('input', function() {
                clearTimeout(searchTimeout);
                searchTimeout = setTimeout(() => {
                    applyFilters();
                }, 300);
            });
        }

        function applyFilters() {
            const searchTerm = document.getElementById('searchInput').value.toLowerCase();
            const chuyenNganh = document.getElementById('chuyenNganhFilter').value;
            const loaiTaiLieu = document.getElementById('loaiTaiLieuFilter').value;
            const trangThai = document.getElementById('trangThaiFilter').value;

            const allDocuments = Array.from(document.querySelectorAll('.document-card'));
            
            filteredDocuments = allDocuments.filter(card => {
                const title = card.querySelector('.document-title').textContent.toLowerCase();
                const description = card.querySelector('.document-description').textContent.toLowerCase();
                const author = card.querySelector('.meta-item span').textContent.toLowerCase();
                
                const cardChuyenNganh = card.dataset.chuyenNganh || '';
                const cardLoaiTaiLieu = card.dataset.loaiTaiLieu || '';
                const cardTrangThai = card.dataset.trangThai || '';

                // Search filter
                const matchesSearch = !searchTerm || 
                    title.includes(searchTerm) || 
                    description.includes(searchTerm) || 
                    author.includes(searchTerm);

                // Category filters
                const matchesChuyenNganh = !chuyenNganh || cardChuyenNganh === chuyenNganh;
                const matchesLoaiTaiLieu = !loaiTaiLieu || cardLoaiTaiLieu === loaiTaiLieu;
                const matchesTrangThai = !trangThai || cardTrangThai === trangThai;

                return matchesSearch && matchesChuyenNganh && matchesLoaiTaiLieu && matchesTrangThai;
            });

            currentPage = 1;
            updatePagination();
            updateStats();
        }

        function updatePagination() {
            const totalItems = filteredDocuments.length;
            const totalPages = Math.ceil(totalItems / itemsPerPage);
            
            // Update pagination info
            const startItem = (currentPage - 1) * itemsPerPage + 1;
            const endItem = Math.min(currentPage * itemsPerPage, totalItems);
            
            document.getElementById('currentPageInfo').textContent = `${startItem}-${endItem}`;
            document.getElementById('totalItems').textContent = totalItems;

            // Update pagination controls
            const prevBtn = document.getElementById('prevPage');
            const nextBtn = document.getElementById('nextPage');
            const pageNumbers = document.getElementById('pageNumbers');

            prevBtn.disabled = currentPage === 1;
            nextBtn.disabled = currentPage === totalPages;

            // Generate page numbers
            pageNumbers.innerHTML = '';
            const maxVisiblePages = 5;
            let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));
            let endPage = Math.min(totalPages, startPage + maxVisiblePages - 1);

            if (endPage - startPage + 1 < maxVisiblePages) {
                startPage = Math.max(1, endPage - maxVisiblePages + 1);
            }

            for (let i = startPage; i <= endPage; i++) {
                const pageBtn = document.createElement('button');
                pageBtn.className = `page-number ${i === currentPage ? 'active' : ''}`;
                pageBtn.textContent = i;
                pageBtn.onclick = () => goToPage(i);
                pageNumbers.appendChild(pageBtn);
            }

            // Show/hide documents
            showCurrentPage();
        }

        function showCurrentPage() {
            const allDocuments = document.querySelectorAll('.document-card');
            const startIndex = (currentPage - 1) * itemsPerPage;
            const endIndex = startIndex + itemsPerPage;

            allDocuments.forEach((card, index) => {
                if (filteredDocuments.includes(card)) {
                    const filteredIndex = filteredDocuments.indexOf(card);
                    if (filteredIndex >= startIndex && filteredIndex < endIndex) {
                        card.style.display = 'block';
                    } else {
                        card.style.display = 'none';
                    }
                } else {
                    card.style.display = 'none';
                }
            });
        }

        function goToPage(page) {
            currentPage = page;
            updatePagination();
        }

        function updateStats() {
            const totalDocuments = filteredDocuments.length;
            const approvedDocuments = filteredDocuments.filter(card => 
                card.dataset.trangThai === 'DaDuyet'
            ).length;
            const hiddenDocuments = filteredDocuments.filter(card => 
                card.dataset.trangThai === 'An'
            ).length;

            // Update stats display
            const statItems = document.querySelectorAll('.stats-container .stat-item');
            if (statItems.length >= 4) {
                statItems[0].querySelector('.stat-number').textContent = totalDocuments;
                statItems[1].querySelector('.stat-number').textContent = approvedDocuments;
                statItems[2].querySelector('.stat-number').textContent = hiddenDocuments;
            }
        }

        // Pagination button event listeners
        document.getElementById('prevPage').addEventListener('click', function() {
            if (currentPage > 1) {
                goToPage(currentPage - 1);
            }
        });

        document.getElementById('nextPage').addEventListener('click', function() {
            const totalPages = Math.ceil(filteredDocuments.length / itemsPerPage);
            if (currentPage < totalPages) {
                goToPage(currentPage + 1);
            }
        });

        // Clear filters
        function clearFilters() {
            document.getElementById('searchInput').value = '';
            document.getElementById('chuyenNganhFilter').value = '';
            document.getElementById('loaiTaiLieuFilter').value = '';
            document.getElementById('trangThaiFilter').value = '';
            applyFilters();
        }

        // Add clear filters button functionality
        document.querySelector('.search-btn').addEventListener('click', function() {
            clearFilters();
        });

        // Make deleteDocument function global
        window.deleteDocument = deleteDocument;

        // Enhanced member search functionality
        let searchTimeout;
        const memberSearch = document.getElementById('memberSearch');
        const memberSearchResults = document.getElementById('memberSearchResults');
        const searchLoading = document.querySelector('.search-loading');
        const isMemberCheckbox = document.getElementById('isMemberCheckbox');
        const memberSearchGroup = document.getElementById('memberSearchGroup');

        // Toggle member search group
        if (isMemberCheckbox) {
            isMemberCheckbox.addEventListener('change', function() {
                if (this.checked) {
                    memberSearchGroup.classList.remove('d-none');
                    memberSearch.focus();
                } else {
                    memberSearchGroup.classList.add('d-none');
                    memberSearch.value = '';
                    showEmptyState();
                }
            });
        }

        if (memberSearch) {
            memberSearch.addEventListener('input', function() {
                const query = this.value.trim();
                
                // Clear previous timeout
                clearTimeout(searchTimeout);
                
                // Show loading state
                if (query.length >= 2) {
                    searchLoading.classList.remove('d-none');
                    showSearchLoading();
                } else {
                    searchLoading.classList.add('d-none');
                    showEmptyState();
                }

                // Debounce search
                searchTimeout = setTimeout(() => {
                    if (query.length >= 2) {
                        performMemberSearch(query);
                    } else {
                        showEmptyState();
                    }
                }, 300);
            });

            // Handle member selection
            memberSearchResults.addEventListener('click', function(e) {
                if (e.target.closest('.search-result-item')) {
                    const item = e.target.closest('.search-result-item');
                    const memberData = JSON.parse(item.dataset.member);
                    
                    // Fill form fields
                    document.getElementById('phieuMaNguoiMuon').value = memberData.maSo || memberData.userName;
                    document.getElementById('phieuHoTenNguoiMuon').value = memberData.hoTen;
                    document.getElementById('phieuEmailNguoiMuon').value = memberData.email || '';
                    document.getElementById('phieuSDTNguoiMuon').value = memberData.phoneNumber || '';
                    document.getElementById('phieuLoaiNguoiMuon').value = memberData.loaiNguoiDung || 'Sinh viên';
                    
                    // Clear search
                    memberSearch.value = '';
                    showEmptyState();
                    
                    // Show success feedback
                    showSearchSuccess(memberData.hoTen);
                }
            });
        }

        function showSearchLoading() {
            memberSearchResults.innerHTML = `
                <div class="search-loading-state">
                    <i class="fas fa-spinner fa-spin text-info"></i>
                    <p>Đang tìm kiếm thành viên...</p>
                </div>
            `;
        }

        function showEmptyState() {
            memberSearchResults.innerHTML = `
                <div class="search-empty-state">
                    <i class="fas fa-search text-muted"></i>
                    <p>Bắt đầu gõ để tìm kiếm thành viên...</p>
                </div>
            `;
        }

        function showNoResults() {
            memberSearchResults.innerHTML = `
                <div class="search-no-results">
                    <i class="fas fa-user-slash"></i>
                    <p>Không tìm thấy thành viên nào phù hợp</p>
                    <small>Thử tìm kiếm với từ khóa khác</small>
                </div>
            `;
        }

        function showSearchSuccess(memberName) {
            // Show toast notification
            if (typeof toastr !== 'undefined') {
                toastr.success(`Đã chọn thành viên: ${memberName}`, 'Thành công');
            }
        }

        function performMemberSearch(query) {
            // Call actual API endpoint
            fetch(`/Librarian/SearchMember?q=${encodeURIComponent(query)}`)
                .then(response => response.json())
                .then(data => {
                    searchLoading.classList.add('d-none');
                    
                    if (data && data.length > 0) {
                        // Transform data to match expected format
                        const transformedData = data.map(user => ({
                            maSo: user.maSo,
                            userName: user.maSo,
                            hoTen: user.hoTen,
                            email: user.email,
                            phoneNumber: user.sdt,
                            loaiNguoiDung: mapVaiTroToLoai(user.loai)
                        }));
                        displaySearchResults(transformedData);
                    } else {
                        showNoResults();
                    }
                })
                .catch(error => {
                    searchLoading.classList.add('d-none');
                    console.error('Search error:', error);
                    
                    // Fallback: show sample results for demo
                    const sampleResults = generateSampleResults(query);
                    displaySearchResults(sampleResults);
                });
        }

        function mapVaiTroToLoai(vaiTro) {
            const mapping = {
                'SinhVien': 'Sinh viên',
                'GiangVien': 'Giảng viên',
                'ThuThu': 'Cán bộ',
                'NghienCuuSinh': 'Nghiên cứu sinh'
            };
            return mapping[vaiTro] || 'Sinh viên';
        }

        function displaySearchResults(results) {
            const resultsHtml = results.map(member => `
                <div class="search-result-item" data-member='${JSON.stringify(member)}'>
                    <div class="search-result-avatar">
                        ${member.hoTen.charAt(0).toUpperCase()}
                    </div>
                    <div class="search-result-info">
                        <div class="search-result-name">${member.hoTen}</div>
                        <div class="search-result-details">
                            ${member.maSo || member.userName} • ${member.email || 'Chưa có email'}
                        </div>
                    </div>
                    <div class="search-result-type">${member.loaiNguoiDung || 'Sinh viên'}</div>
                </div>
            `).join('');
            
            memberSearchResults.innerHTML = resultsHtml;
        }

        function generateSampleResults(query) {
            // Sample data for demo purposes
            const sampleMembers = [
                {
                    hoTen: 'Nguyễn Văn An',
                    maSo: 'SV001',
                    userName: 'SV001',
                    email: 'an.nguyen@example.com',
                    phoneNumber: '0123456789',
                    loaiNguoiDung: 'Sinh viên'
                },
                {
                    hoTen: 'Trần Thị Bình',
                    maSo: 'SV002',
                    userName: 'SV002',
                    email: 'binh.tran@example.com',
                    phoneNumber: '0987654321',
                    loaiNguoiDung: 'Sinh viên'
                },
                {
                    hoTen: 'Lê Văn Cường',
                    maSo: 'GV001',
                    userName: 'GV001',
                    email: 'cuong.le@example.com',
                    phoneNumber: '0369852147',
                    loaiNguoiDung: 'Giảng viên'
                }
            ];

            return sampleMembers.filter(member => 
                member.hoTen.toLowerCase().includes(query.toLowerCase()) ||
                member.maSo.toLowerCase().includes(query.toLowerCase()) ||
                member.email.toLowerCase().includes(query.toLowerCase())
            );
        }
    </script>
}

<style>
/* Modal lập phiếu mượn styling */
.modal-borrow-header {
    background: linear-gradient(135deg, #2176FF 0%, #1a5bb8 100%);
    color: white;
    border-radius: 12px 12px 0 0;
    padding: 20px 25px;
    border-bottom: none;
}

.modal-borrow-header .modal-title {
    font-size: 20px;
    font-weight: 600;
    margin: 0;
    display: flex;
    align-items: center;
    gap: 10px;
}

.modal-borrow-header .btn-close-white {
    filter: invert(1);
    opacity: 0.8;
}

.modal-borrow-header .btn-close-white:hover {
    opacity: 1;
}

/* Member toggle section */
.member-toggle-section {
    background: #f8f9fa;
    border-radius: 8px;
    padding: 20px;
    border: 1px solid #e9ecef;
}

.custom-checkbox {
    margin-bottom: 0;
}

.custom-checkbox .form-check-label {
    font-weight: 500;
    color: #495057;
    cursor: pointer;
    display: flex;
    align-items: center;
    gap: 8px;
}

.custom-checkbox .form-check-input {
    width: 18px;
    height: 18px;
    margin-right: 10px;
}

/* Search card */
.search-card {
    background: white;
    border-radius: 8px;
    border: 1px solid #dee2e6;
    overflow: hidden;
    margin-top: 15px;
}

.search-header {
    background: linear-gradient(135deg, #17a2b8 0%, #138496 100%);
    color: white;
    padding: 12px 15px;
    font-weight: 500;
    display: flex;
    align-items: center;
    gap: 8px;
}

.search-body {
    padding: 15px;
}

.search-input-wrapper {
    position: relative;
}

.search-input {
    border: 2px solid #e9ecef;
    border-radius: 6px;
    padding: 10px 12px;
    padding-right: 40px;
    font-size: 14px;
    transition: all 0.3s ease;
    width: 100%;
}

.search-input:focus {
    border-color: #17a2b8;
    box-shadow: 0 0 0 0.2rem rgba(23, 162, 184, 0.25);
    outline: none;
}

.search-loading {
    position: absolute;
    right: 12px;
    top: 50%;
    transform: translateY(-50%);
    color: #17a2b8;
}

.search-hint {
    margin-top: 8px;
    color: #6c757d;
    font-size: 12px;
    display: flex;
    align-items: center;
    gap: 5px;
}

.search-results {
    margin-top: 10px;
    max-height: 250px;
    overflow-y: auto;
    border: 1px solid #dee2e6;
    border-radius: 6px;
    background: white;
    min-height: 60px;
}

.search-empty-state {
    text-align: center;
    padding: 20px;
    color: #6c757d;
}

.search-empty-state i {
    font-size: 24px;
    margin-bottom: 8px;
    display: block;
}

.search-empty-state p {
    margin: 0;
    font-size: 13px;
}

.search-result-item {
    padding: 12px 15px;
    border-bottom: 1px solid #f8f9fa;
    cursor: pointer;
    transition: all 0.2s ease;
    display: flex;
    align-items: center;
    gap: 12px;
}

.search-result-item:hover {
    background-color: #f8f9fa;
    border-left: 3px solid #17a2b8;
}

.search-result-item:last-child {
    border-bottom: none;
}

.search-result-avatar {
    width: 35px;
    height: 35px;
    border-radius: 50%;
    background: linear-gradient(135deg, #17a2b8 0%, #138496 100%);
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-weight: 600;
    font-size: 14px;
    flex-shrink: 0;
}

.search-result-info {
    flex: 1;
}

.search-result-name {
    font-weight: 600;
    color: #495057;
    font-size: 14px;
    margin-bottom: 2px;
}

.search-result-details {
    font-size: 12px;
    color: #6c757d;
}

.search-result-type {
    background: #e9ecef;
    color: #495057;
    padding: 2px 8px;
    border-radius: 12px;
    font-size: 11px;
    font-weight: 500;
}

.search-no-results {
    text-align: center;
    padding: 20px;
    color: #6c757d;
}

.search-no-results i {
    font-size: 24px;
    margin-bottom: 8px;
    display: block;
    color: #dc3545;
}

.search-no-results p {
    margin: 0;
    font-size: 13px;
}

.search-loading-state {
    text-align: center;
    padding: 20px;
    color: #17a2b8;
}

.search-loading-state i {
    font-size: 24px;
    margin-bottom: 8px;
    display: block;
}

.search-loading-state p {
    margin: 0;
    font-size: 13px;
}

/* Info cards */
.info-card {
    background: white;
    border-radius: 12px;
    box-shadow: 0 2px 10px rgba(0,0,0,0.08);
    border: 1px solid #e9ecef;
    overflow: hidden;
    transition: all 0.3s ease;
}

.info-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 5px 20px rgba(0,0,0,0.12);
}

.card-header-custom {
    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
    padding: 15px 20px;
    border-bottom: 1px solid #dee2e6;
    font-weight: 600;
    color: #495057;
    font-size: 16px;
    display: flex;
    align-items: center;
    gap: 8px;
}

.card-body-custom {
    padding: 20px;
}

/* Form styling */
.form-group-custom {
    margin-bottom: 20px;
}

.form-label-custom {
    font-weight: 500;
    color: #495057;
    margin-bottom: 8px;
    font-size: 14px;
    display: flex;
    align-items: center;
    gap: 8px;
}

.form-control-custom {
    border: 2px solid #e9ecef;
    border-radius: 8px;
    padding: 12px 16px;
    font-size: 14px;
    transition: all 0.3s ease;
    width: 100%;
}

.form-control-custom:focus {
    border-color: #2176FF;
    box-shadow: 0 0 0 0.2rem rgba(33, 118, 255, 0.15);
    outline: none;
    transform: translateY(-1px);
}

.form-control-custom[readonly] {
    background-color: #f8f9fa;
    color: #6c757d;
}

/* Modal footer */
.modal-footer-custom {
    background: #f8f9fa;
    border-top: 1px solid #dee2e6;
    padding: 20px 25px;
    border-radius: 0 0 12px 12px;
}

.btn-secondary-custom {
    background: #6c757d;
    border: none;
    color: white;
    padding: 10px 20px;
    border-radius: 8px;
    font-weight: 500;
    transition: all 0.3s ease;
}

.btn-secondary-custom:hover {
    background: #5a6268;
    color: white;
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(0,0,0,0.15);
}

.btn-primary-custom {
    background: linear-gradient(135deg, #2176FF 0%, #1a5bb8 100%);
    border: none;
    color: white;
    padding: 10px 20px;
    border-radius: 8px;
    font-weight: 500;
    transition: all 0.3s ease;
}

.btn-primary-custom:hover {
    background: linear-gradient(135deg, #1a5bb8 0%, #0d47a1 100%);
    color: white;
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(33, 118, 255, 0.3);
}

/* Responsive design */
@@media (max-width: 768px) {
    .modal-dialog {
        width: 95%;
        margin: 10px auto;
    }
    
    .card-body-custom {
        padding: 15px;
    }
    
    .form-group-custom {
        margin-bottom: 15px;
    }
    
    .form-label-custom {
        font-size: 13px;
    }
    
    .form-control-custom {
        font-size: 13px;
        padding: 10px 12px;
    }
    
    .card-header-custom {
        font-size: 15px;
        padding: 12px 15px;
    }
}
</style>
